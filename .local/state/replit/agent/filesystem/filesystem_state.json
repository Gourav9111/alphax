{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nKAMIO is a full-stack mobile-first e-commerce platform specializing in custom apparel design. The platform allows users to browse product categories (Cricket, Football, Biker, Cyclist, Marathon, Esports, Custom Flags, Corporate Gifts, etc.), customize t-shirts with 3D previews, and manage orders through an admin dashboard. The application features a React frontend with Vite, Express.js backend, PostgreSQL database with Drizzle ORM, and implements JWT-based authentication.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with pages for home, categories, products, cart, checkout, profile, customize, and admin sections\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **UI Framework**: Tailwind CSS with shadcn/ui components for consistent design system\n- **Form Handling**: React Hook Form with Zod validation for type-safe form management\n- **Color Scheme**: Primary colors are #E30613 (red), #FFFFFF (white), and #F8F8F8 (off-white) for brand consistency\n\n## Backend Architecture\n- **Framework**: Express.js with TypeScript for RESTful API endpoints\n- **Database Access**: Drizzle ORM with PostgreSQL for type-safe database operations\n- **Authentication**: JWT-based authentication with bcryptjs for password hashing\n- **File Storage**: Images stored in database (GridFS-like approach) rather than external URLs\n- **Session Management**: Express sessions for maintaining user state\n- **API Structure**: RESTful endpoints following `/api/*` pattern for auth, products, categories, cart, and orders\n\n## Data Storage\n- **Primary Database**: PostgreSQL accessed through Neon Database serverless platform\n- **ORM**: Drizzle ORM with schema-first approach for type safety\n- **Image Storage**: Database-based image storage system to avoid external URL dependencies\n- **Schema Design**: Normalized tables for users, categories, products, cart items, orders, and custom designs\n- **Migrations**: Drizzle Kit for database schema migrations and management\n\n## Authentication & Authorization\n- **Authentication Method**: JWT tokens with email/password credentials\n- **Password Security**: bcryptjs for secure password hashing and comparison\n- **Role-Based Access**: User and admin roles with protected admin routes\n- **Token Storage**: Client-side localStorage for JWT token persistence\n- **Session Management**: Express sessions with PostgreSQL session store using connect-pg-simple\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL database platform via `@neondatabase/serverless`\n- **Connection Pooling**: Built-in connection pooling through Neon's serverless architecture\n\n## UI Component Libraries\n- **Radix UI**: Headless UI components for accessibility and consistent behavior across all interactive elements\n- **Tailwind CSS**: Utility-first CSS framework with custom design tokens and theming\n- **Lucide React**: Icon library for consistent iconography throughout the application\n\n## Development Tools\n- **Vite**: Fast build tool with hot module replacement and optimized production builds\n- **TypeScript**: Type safety across frontend, backend, and shared code\n- **ESBuild**: Fast JavaScript bundler for production builds\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer plugins\n\n## Authentication & Security\n- **JWT**: JSON Web Tokens for stateless authentication\n- **bcryptjs**: Password hashing and comparison for secure user credentials\n\n## State Management & Data Fetching\n- **TanStack Query**: Server state management, caching, and synchronization\n- **React Hook Form**: Form state management with performance optimization\n- **Zod**: Runtime type validation for forms and API data\n\n## Development Environment\n- **Replit Integration**: Custom Vite plugins for Replit development environment\n- **Runtime Error Handling**: Development-time error overlay for debugging\n- **Hot Reload**: Development server with instant updates during code changes","size_bytes":4164},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n      allow: [\"..\"],\n    },\n  },\n  publicDir: path.resolve(import.meta.dirname, \"attached_assets\"),\n});\n","size_bytes":1059},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport jwt from \"jsonwebtoken\";\nimport bcrypt from \"bcryptjs\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { storage } from \"./storage.js\";\nimport { insertUserSchema, insertProductSchema, insertCategorySchema, insertCartItemSchema, insertOrderSchema } from \"@shared/schema\";\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"kamio-secret-key\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Middleware to verify JWT token\nfunction authenticateToken(req: any, res: any, next: any) {\n  const authHeader = req.headers['authorization'];\n  const token = authHeader && authHeader.split(' ')[1];\n\n  if (!token) {\n    return res.status(401).json({ message: 'Access token required' });\n  }\n\n  jwt.verify(token, JWT_SECRET, (err: any, user: any) => {\n    if (err) return res.status(403).json({ message: 'Invalid token' });\n    req.user = user;\n    next();\n  });\n}\n\n// Middleware to check admin role\nfunction requireAdmin(req: any, res: any, next: any) {\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({ message: 'Admin access required' });\n  }\n  next();\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth routes\n  app.post(\"/api/auth/signup\", async (req, res) => {\n    try {\n      const userData = insertUserSchema.parse(req.body);\n\n      // Check if user already exists\n      const existingUser = await storage.getUserByEmail(userData.email);\n      if (existingUser) {\n        return res.status(400).json({ message: \"User already exists\" });\n      }\n\n      const user = await storage.createUser(userData);\n      const token = jwt.sign({ userId: user.id, email: user.email, role: user.role }, JWT_SECRET);\n\n      res.json({ user: { id: user.id, email: user.email, name: user.name, role: user.role }, token });\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid user data\", error });\n    }\n  });\n\n  app.post(\"/api/auth/login\", async (req, res) => {\n    try {\n      const { email, password } = req.body;\n\n      const user = await storage.getUserByEmail(email);\n      if (!user) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n\n      const validPassword = await bcrypt.compare(password, user.password);\n      if (!validPassword) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n\n      const token = jwt.sign({ userId: user.id, email: user.email, role: user.role }, JWT_SECRET);\n      res.json({ user: { id: user.id, email: user.email, name: user.name, role: user.role }, token });\n    } catch (error) {\n      res.status(500).json({ message: \"Login failed\", error });\n    }\n  });\n\n  // Serve uploaded images\n  app.get(\"/api/images/:filename\", (req: Request, res: Response) => {\n    const filename = req.params.filename;\n    const decodedFilename = decodeURIComponent(filename);\n    const imagePath = path.join(__dirname, \"..\", \"uploaded_images\", decodedFilename);\n    res.sendFile(imagePath);\n  });\n\n  // Serve attached assets\n  app.get(\"/attached_assets/:filename\", (req: Request, res: Response) => {\n    const filename = req.params.filename;\n    const decodedFilename = decodeURIComponent(filename);\n    const imagePath = path.join(__dirname, \"..\", \"attached_assets\", decodedFilename);\n    res.sendFile(imagePath);\n  });\n\n  // Category routes\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch categories\", error });\n    }\n  });\n\n  app.post(\"/api/categories\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const categoryData = insertCategorySchema.parse(req.body);\n      const category = await storage.createCategory(categoryData);\n      res.json(category);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid category data\", error });\n    }\n  });\n\n  app.get(\"/api/categories/:slug\", async (req, res) => {\n    try {\n      const category = await storage.getCategoryBySlug(req.params.slug);\n      if (!category) {\n        return res.status(404).json({ message: \"Category not found\" });\n      }\n      res.json(category);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch category\", error });\n    }\n  });\n\n  // Product routes\n  app.get(\"/api/products\", async (req, res) => {\n    try {\n      const { categoryId } = req.query;\n      const products = await storage.getProducts(categoryId as string);\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch products\", error });\n    }\n  });\n\n  app.get(\"/api/categories/:categoryId/products\", async (req, res) => {\n    try {\n      const products = await storage.getProducts(req.params.categoryId);\n      res.json(products);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch products\", error });\n    }\n  });\n\n  app.get(\"/api/products/:id\", async (req, res) => {\n    try {\n      const product = await storage.getProduct(req.params.id);\n      if (!product) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch product\", error });\n    }\n  });\n\n  app.post(\"/api/products\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const productData = insertProductSchema.parse(req.body);\n      const product = await storage.createProduct(productData);\n      res.json(product);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid product data\", error });\n    }\n  });\n\n  app.put(\"/api/products/:id\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const product = await storage.updateProduct(req.params.id, req.body);\n      if (!product) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json(product);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to update product\", error });\n    }\n  });\n\n  app.delete(\"/api/products/:id\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const deleted = await storage.deleteProduct(req.params.id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Product not found\" });\n      }\n      res.json({ message: \"Product deleted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete product\", error });\n    }\n  });\n\n  // Cart routes\n  app.get(\"/api/cart\", authenticateToken, async (req, res) => {\n    try {\n      const cartItems = await storage.getCartItems(req.user.userId);\n\n      // Fetch product details for each cart item\n      const cartWithProducts = await Promise.all(\n        cartItems.map(async (item) => {\n          const product = await storage.getProduct(item.productId!);\n          return { ...item, product };\n        })\n      );\n\n      res.json(cartWithProducts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch cart\", error });\n    }\n  });\n\n  app.post(\"/api/cart\", authenticateToken, async (req, res) => {\n    try {\n      const cartItemData = insertCartItemSchema.parse({\n        ...req.body,\n        userId: req.user.userId\n      });\n\n      const cartItem = await storage.addToCart(cartItemData);\n      res.json(cartItem);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid cart item data\", error });\n    }\n  });\n\n  app.put(\"/api/cart/:id\", authenticateToken, async (req, res) => {\n    try {\n      const cartItem = await storage.updateCartItem(req.params.id, req.body);\n      if (!cartItem) {\n        return res.status(404).json({ message: \"Cart item not found\" });\n      }\n      res.json(cartItem);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to update cart item\", error });\n    }\n  });\n\n  app.delete(\"/api/cart/:id\", authenticateToken, async (req, res) => {\n    try {\n      const deleted = await storage.removeFromCart(req.params.id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Cart item not found\" });\n      }\n      res.json({ message: \"Item removed from cart\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to remove cart item\", error });\n    }\n  });\n\n  app.delete(\"/api/cart\", authenticateToken, async (req, res) => {\n    try {\n      await storage.clearCart(req.user.userId);\n      res.json({ message: \"Cart cleared successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to clear cart\", error });\n    }\n  });\n\n  // Order routes\n  app.get(\"/api/orders\", authenticateToken, async (req, res) => {\n    try {\n      const orders = await storage.getOrders(req.user.userId);\n      res.json(orders);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch orders\", error });\n    }\n  });\n\n  app.post(\"/api/orders\", authenticateToken, async (req, res) => {\n    try {\n      const orderData = insertOrderSchema.parse({\n        ...req.body,\n        userId: req.user.userId\n      });\n\n      const order = await storage.createOrder(orderData);\n\n      // Clear cart after successful order\n      await storage.clearCart(req.user.userId);\n\n      res.json(order);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid order data\", error });\n    }\n  });\n\n  app.get(\"/api/orders/:id\", authenticateToken, async (req, res) => {\n    try {\n      const order = await storage.getOrder(req.params.id);\n      if (!order) {\n        return res.status(404).json({ message: \"Order not found\" });\n      }\n\n      // Check if user owns this order or is admin\n      if (order.userId !== req.user.userId && req.user.role !== 'admin') {\n        return res.status(403).json({ message: \"Access denied\" });\n      }\n\n      res.json(order);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch order\", error });\n    }\n  });\n\n  // Admin routes\n  app.get(\"/api/admin/orders\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const orders = await storage.getOrders();\n      res.json(orders);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch orders\", error });\n    }\n  });\n\n  app.patch(\"/api/admin/orders/:id/status\", authenticateToken, requireAdmin, async (req, res) => {\n    try {\n      const { status } = req.body;\n      const order = await storage.updateOrderStatus(req.params.id, status);\n      if (!order) {\n        return res.status(404).json({ message: \"Order not found\" });\n      }\n      res.json(order);\n    } catch (error) {\n      res.status(400).json({ message: \"Failed to update order status\", error });\n    }\n  });\n\n  // User profile route\n  app.get(\"/api/profile\", authenticateToken, async (req, res) => {\n    try {\n      const user = await storage.getUser(req.user.userId);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      // Don't send password\n      const { password, ...userWithoutPassword } = user;\n      res.json(userWithoutPassword);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch profile\", error });\n    }\n  });\n\n  // Debug endpoint to check users\n  app.get(\"/api/debug/users\", async (req, res) => {\n    try {\n      const allUsers = await storage.getAllUsers();\n      const usersWithoutPasswords = allUsers.map(user => ({\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        role: user.role\n      }));\n      res.json(usersWithoutPasswords);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch users\", error: error.message });\n    }\n  });\n\n  // Create initial admin user (remove this endpoint after creating admin)\n  app.post(\"/api/create-admin\", async (req, res) => {\n    try {\n      const { email, password, name } = req.body;\n\n      console.log(\"Creating admin user:\", { email, name });\n\n      // Check if user already exists\n      const existingUser = await storage.getUserByEmail(email);\n      if (existingUser) {\n        console.log(\"User already exists:\", email);\n        return res.status(400).json({ message: \"User already exists\" });\n      }\n\n      const userData = { email, password, name, role: 'admin' as const };\n      const user = await storage.createUser(userData);\n      const token = jwt.sign({ userId: user.id, email: user.email, role: user.role }, JWT_SECRET);\n\n      console.log(\"Admin user created successfully:\", { id: user.id, email: user.email, role: user.role });\n\n      res.json({ \n        user: { id: user.id, email: user.email, name: user.name, role: user.role }, \n        token,\n        message: \"Admin user created successfully\" \n      });\n    } catch (error) {\n      console.error(\"Error creating admin user:\", error);\n      res.status(400).json({ message: \"Failed to create admin user\", error: error.message });\n    }\n  });\n\n  // Force create a new admin (use this to get guaranteed working credentials)\n  app.post(\"/api/force-admin\", async (req, res) => {\n    try {\n      const email = \"admin@kamio.com\";\n      const password = \"admin123456\";\n      const name = \"Kamio Admin\";\n\n      // Delete existing user if exists\n      const existingUser = await storage.getUserByEmail(email);\n      if (existingUser) {\n        await storage.deleteUser(existingUser.id);\n      }\n\n      const userData = { email, password, name, role: 'admin' as const };\n      const user = await storage.createUser(userData);\n      const token = jwt.sign({ userId: user.id, email: user.email, role: user.role }, JWT_SECRET);\n\n      console.log(\"Force admin user created:\", { id: user.id, email: user.email, role: user.role });\n\n      res.json({ \n        user: { id: user.id, email: user.email, name: user.name, role: user.role }, \n        token,\n        credentials: {\n          email: email,\n          password: password\n        },\n        message: \"Admin user force created successfully\" \n      });\n    } catch (error) {\n      console.error(\"Error force creating admin user:\", error);\n      res.status(400).json({ message: \"Failed to force create admin user\", error: error.message });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}","size_bytes":14262},"server/storage.ts":{"content":"import { type User, type InsertUser, type Category, type InsertCategory, type Product, type InsertProduct, type CartItem, type InsertCartItem, type Order, type InsertOrder, type CustomDesign, type InsertCustomDesign } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\nimport bcrypt from \"bcryptjs\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  getAllUsers(): Promise<User[]>;\n  deleteUser(id: string): Promise<boolean>;\n\n  // Categories\n  getCategories(): Promise<Category[]>;\n  getCategoryBySlug(slug: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n\n  // Products\n  getProducts(categoryId?: string): Promise<Product[]>;\n  getProduct(id: string): Promise<Product | undefined>;\n  getProductBySlug(slug: string): Promise<Product | undefined>;\n  createProduct(product: InsertProduct): Promise<Product>;\n  updateProduct(id: string, product: Partial<Product>): Promise<Product | undefined>;\n  deleteProduct(id: string): Promise<boolean>;\n\n  // Cart\n  getCartItems(userId: string): Promise<CartItem[]>;\n  addToCart(cartItem: InsertCartItem): Promise<CartItem>;\n  updateCartItem(id: string, updates: Partial<CartItem>): Promise<CartItem | undefined>;\n  removeFromCart(id: string): Promise<boolean>;\n  clearCart(userId: string): Promise<boolean>;\n\n  // Orders\n  getOrders(userId?: string): Promise<Order[]>;\n  getOrder(id: string): Promise<Order | undefined>;\n  createOrder(order: InsertOrder): Promise<Order>;\n  updateOrderStatus(id: string, status: string): Promise<Order | undefined>;\n\n  // Custom Designs\n  getCustomDesigns(userId: string): Promise<CustomDesign[]>;\n  createCustomDesign(design: InsertCustomDesign): Promise<CustomDesign>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private categories: Map<string, Category>;\n  private products: Map<string, Product>;\n  private cartItems: Map<string, CartItem>;\n  private orders: Map<string, Order>;\n  private customDesigns: Map<string, CustomDesign>;\n\n  constructor() {\n    this.users = new Map();\n    this.categories = new Map();\n    this.products = new Map();\n    this.cartItems = new Map();\n    this.orders = new Map();\n    this.customDesigns = new Map();\n\n    this.seedData();\n  }\n\n  private async seedData() {\n    // Create admin user\n    const adminId = randomUUID();\n    const adminUser: User = {\n      id: adminId,\n      email: \"admin@kamio.in\",\n      password: await bcrypt.hash(\"kamio9111\", 10),\n      name: \"Admin User\",\n      role: \"admin\",\n      createdAt: new Date(),\n    };\n    this.users.set(adminId, adminUser);\n\n    // Seed categories\n    const categories = [\n      { name: \"Cricket\", slug: \"cricket\", isPrimary: true, image: \"/attached_assets/cricket%20jersey_1757357415580.png\" },\n      { name: \"Football\", slug: \"football\", isPrimary: true, image: \"/attached_assets/fotball%20jersey%20image_1757357415582.png\" },\n      { name: \"E-Sports\", slug: \"esports\", isPrimary: true, image: \"/attached_assets/esports%20kamio_1757357415581.png\" },\n      { name: \"Marathon\", slug: \"marathon\", isPrimary: true, image: \"/attached_assets/marathon%20jersey%20ksmio_1757357415582.png\" },\n      { name: \"Cycling\", slug: \"cycling\", isPrimary: true, image: \"/attached_assets/cyclist_1757357415581.png\" },\n      { name: \"Bikers\", slug: \"bikers\", isPrimary: true, image: \"/attached_assets/biker%20jersy%20kamio_1757357415580.jfif\" },\n      { name: \"Custom Flags\", slug: \"custom-flags\", isPrimary: false, image: \"/attached_assets/KAMIO%20FLAGS_1757366547552.png\" },\n      { name: \"Corporate Gifts\", slug: \"corporate-gifts\", isPrimary: false, image: \"/attached_assets/GIFT%20ITEM%20KAMIO_1757366547551.png\" },\n      { name: \"Corporate Uniforms\", slug: \"corporate-uniforms\", isPrimary: false, image: \"/attached_assets/uniform%20kamio_1757366547552.png\" },\n      { name: \"Stickers\", slug: \"stickers\", isPrimary: false, image: \"/attached_assets/STICKERS%20KAMIO_1757366547552.png\" },\n    ];\n\n    for (const cat of categories) {\n      const categoryId = randomUUID();\n      const category: Category = {\n        id: categoryId,\n        ...cat,\n        description: `High-quality ${cat.name.toLowerCase()} apparel`,\n        createdAt: new Date(),\n      };\n      this.categories.set(categoryId, category);\n    }\n\n    // Seed some products\n    const esportsCategory = Array.from(this.categories.values()).find(c => c.slug === \"esports\");\n    const cricketCategory = Array.from(this.categories.values()).find(c => c.slug === \"cricket\");\n\n    if (esportsCategory) {\n      const product1Id = randomUUID();\n      const product1: Product = {\n        id: product1Id,\n        name: \"Gaming Pro Jersey\",\n        slug: \"gaming-pro-jersey\",\n        description: \"Custom esports jersey with premium fabric\",\n        price: \"549\",\n        originalPrice: \"699\",\n        categoryId: esportsCategory.id,\n        images: [\"https://pixabay.com/get/g4247551d5d483f87470f7cf6d7eafdb1c2c50f0cf15376cccaa5d84986fa0cd98c74287f34c70e75b4c89ba066ba6172b1054e830dd91e910df98dc4d7f1fdd4_1280.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\"],\n        colors: [\"Black\", \"White\", \"Red\", \"Blue\"],\n        inventory: 50,\n        rating: \"4.8\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(product1Id, product1);\n    }\n\n    if (cricketCategory) {\n      const product2Id = randomUUID();\n      const product2: Product = {\n        id: product2Id,\n        name: \"Cricket Team Jersey\",\n        slug: \"cricket-team-jersey\",\n        description: \"Professional cricket uniform with custom printing\",\n        price: \"649\",\n        originalPrice: \"799\",\n        categoryId: cricketCategory.id,\n        images: [\"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"White\", \"Blue\", \"Green\"],\n        inventory: 30,\n        rating: \"4.9\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(product2Id, product2);\n    }\n\n    // Add Biker products\n    const bikerCategory = Array.from(this.categories.values()).find(c => c.slug === \"bikers\");\n\n    if (bikerCategory) {\n      // KAMIO Racing Jersey\n      const bikerProduct1Id = randomUUID();\n      const bikerProduct1: Product = {\n        id: bikerProduct1Id,\n        name: \"KAMIO Racing Jersey\",\n        slug: \"kamio-racing-jersey\",\n        description: \"Premium cycling jersey with aerodynamic design and moisture-wicking fabric. Features the iconic KAMIO branding with red accents.\",\n        price: \"899\",\n        originalPrice: \"1199\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_6f331cbc_1757350633571.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"Black\", \"White\", \"Red\"],\n        inventory: 25,\n        rating: \"4.9\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct1Id, bikerProduct1);\n\n      // KAMIO Protective Biker Suit\n      const bikerProduct2Id = randomUUID();\n      const bikerProduct2: Product = {\n        id: bikerProduct2Id,\n        name: \"KAMIO Protective Biker Suit\",\n        slug: \"kamio-protective-biker-suit\",\n        description: \"Professional grade protective biker gear with CE-approved armor. Ultimate safety meets style with KAMIO's signature design.\",\n        price: \"2899\",\n        originalPrice: \"3499\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_9a18ab62_1757350633572.jpg\"],\n        sizes: [\"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"Black\", \"Gray\", \"Red\"],\n        inventory: 15,\n        rating: \"4.8\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct2Id, bikerProduct2);\n\n      // KAMIO Wings Sports Gear\n      const bikerProduct3Id = randomUUID();\n      const bikerProduct3: Product = {\n        id: bikerProduct3Id,\n        name: \"KAMIO Wings Sports Gear\",\n        slug: \"kamio-wings-sports-gear\",\n        description: \"Elite motorsport apparel featuring the distinctive KAMIO wings logo. Perfect for track days and competitive racing.\",\n        price: \"1599\",\n        originalPrice: \"1999\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_24d14876_1757350633572.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\"],\n        colors: [\"Black\", \"Teal\", \"White\"],\n        inventory: 20,\n        rating: \"4.7\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct3Id, bikerProduct3);\n\n      // KAMIO Winter Biker Jacket\n      const bikerProduct4Id = randomUUID();\n      const bikerProduct4: Product = {\n        id: bikerProduct4Id,\n        name: \"KAMIO Winter Biker Jacket\",\n        slug: \"kamio-winter-biker-jacket\",\n        description: \"Insulated winter riding jacket with weather protection and reflective elements. Keep warm while staying visible on cold rides.\",\n        price: \"1299\",\n        originalPrice: \"1699\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_6853b79c_1757350633573.jpg\"],\n        sizes: [\"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"Black\", \"Red\", \"White\"],\n        inventory: 18,\n        rating: \"4.6\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct4Id, bikerProduct4);\n\n      // KAMIO Eagle Sports Jersey\n      const bikerProduct5Id = randomUUID();\n      const bikerProduct5: Product = {\n        id: bikerProduct5Id,\n        name: \"KAMIO Eagle Sports Jersey\",\n        slug: \"kamio-eagle-sports-jersey\",\n        description: \"Bold sports jersey with striking eagle design and geometric patterns. Made from high-performance fabric for maximum comfort.\",\n        price: \"749\",\n        originalPrice: \"999\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_45376b86_1757350633573.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"Black\", \"White\", \"Gray\"],\n        inventory: 30,\n        rating: \"4.8\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct5Id, bikerProduct5);\n\n      // KAMIO Pro Racing Suit\n      const bikerProduct6Id = randomUUID();\n      const bikerProduct6: Product = {\n        id: bikerProduct6Id,\n        name: \"KAMIO Pro Racing Suit\",\n        slug: \"kamio-pro-racing-suit\",\n        description: \"Advanced racing suit with ergonomic design and superior protection. Features cutting-edge materials and championship-level performance.\",\n        price: \"3299\",\n        originalPrice: \"3999\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_b3af2892_1757350633574.jpg\"],\n        sizes: [\"S\", \"M\", \"L\", \"XL\"],\n        colors: [\"Black\", \"Silver\", \"Red\"],\n        inventory: 12,\n        rating: \"4.9\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct6Id, bikerProduct6);\n\n      // KAMIO Teal Racing Jersey\n      const bikerProduct7Id = randomUUID();\n      const bikerProduct7: Product = {\n        id: bikerProduct7Id,\n        name: \"KAMIO Teal Racing Jersey\",\n        slug: \"kamio-teal-racing-jersey\",\n        description: \"Vibrant teal racing jersey with dynamic geometric patterns. Ultra-lightweight and breathable for peak performance.\",\n        price: \"849\",\n        originalPrice: \"1099\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_e566bdfc_1757350633574.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\"],\n        colors: [\"Teal\", \"Black\", \"White\"],\n        inventory: 22,\n        rating: \"4.7\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct7Id, bikerProduct7);\n\n      // KAMIO Sport Performance Jersey\n      const bikerProduct8Id = randomUUID();\n      const bikerProduct8: Product = {\n        id: bikerProduct8Id,\n        name: \"KAMIO Sport Performance Jersey\",\n        slug: \"kamio-sport-performance-jersey\",\n        description: \"Classic white performance jersey with bold black stripe design. Perfect for training sessions and competitive events.\",\n        price: \"599\",\n        originalPrice: \"799\",\n        categoryId: bikerCategory.id,\n        images: [\"/api/images/WhatsApp%20Image%202025-08-28%20at%2015.56.51_6ddb56be_1757350633571.jpg\"],\n        sizes: [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"],\n        colors: [\"White\", \"Black\", \"Gray\"],\n        inventory: 35,\n        rating: \"4.5\",\n        isActive: true,\n        createdAt: new Date(),\n      };\n      this.products.set(bikerProduct8Id, bikerProduct8);\n    }\n  }\n\n  // User methods\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.email === email);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const hashedPassword = await bcrypt.hash(insertUser.password, 10);\n    const user: User = {\n      ...insertUser,\n      id,\n      password: hashedPassword,\n      createdAt: new Date(),\n    };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    return Array.from(this.users.values());\n  }\n\n  async deleteUser(id: string): Promise<boolean> {\n    return this.users.delete(id);\n  }\n\n  // Category methods\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n\n  async getCategoryBySlug(slug: string): Promise<Category | undefined> {\n    return Array.from(this.categories.values()).find(cat => cat.slug === slug);\n  }\n\n  async createCategory(insertCategory: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const category: Category = {\n      ...insertCategory,\n      id,\n      createdAt: new Date(),\n    };\n    this.categories.set(id, category);\n    return category;\n  }\n\n  // Product methods\n  async getProducts(categoryId?: string): Promise<Product[]> {\n    const products = Array.from(this.products.values());\n    if (categoryId) {\n      return products.filter(p => p.categoryId === categoryId && p.isActive);\n    }\n    return products.filter(p => p.isActive);\n  }\n\n  async getProduct(id: string): Promise<Product | undefined> {\n    return this.products.get(id);\n  }\n\n  async getProductBySlug(slug: string): Promise<Product | undefined> {\n    return Array.from(this.products.values()).find(p => p.slug === slug);\n  }\n\n  async createProduct(insertProduct: InsertProduct): Promise<Product> {\n    const id = randomUUID();\n    const product: Product = {\n      ...insertProduct,\n      id,\n      createdAt: new Date(),\n    };\n    this.products.set(id, product);\n    return product;\n  }\n\n  async updateProduct(id: string, updates: Partial<Product>): Promise<Product | undefined> {\n    const product = this.products.get(id);\n    if (!product) return undefined;\n\n    const updatedProduct = { ...product, ...updates };\n    this.products.set(id, updatedProduct);\n    return updatedProduct;\n  }\n\n  async deleteProduct(id: string): Promise<boolean> {\n    return this.products.delete(id);\n  }\n\n  // Cart methods\n  async getCartItems(userId: string): Promise<CartItem[]> {\n    return Array.from(this.cartItems.values()).filter(item => item.userId === userId);\n  }\n\n  async addToCart(insertCartItem: InsertCartItem): Promise<CartItem> {\n    const id = randomUUID();\n    const cartItem: CartItem = {\n      ...insertCartItem,\n      id,\n      createdAt: new Date(),\n    };\n    this.cartItems.set(id, cartItem);\n    return cartItem;\n  }\n\n  async updateCartItem(id: string, updates: Partial<CartItem>): Promise<CartItem | undefined> {\n    const item = this.cartItems.get(id);\n    if (!item) return undefined;\n\n    const updatedItem = { ...item, ...updates };\n    this.cartItems.set(id, updatedItem);\n    return updatedItem;\n  }\n\n  async removeFromCart(id: string): Promise<boolean> {\n    return this.cartItems.delete(id);\n  }\n\n  async clearCart(userId: string): Promise<boolean> {\n    const userItems = Array.from(this.cartItems.entries()).filter(([_, item]) => item.userId === userId);\n    userItems.forEach(([id]) => this.cartItems.delete(id));\n    return true;\n  }\n\n  // Order methods\n  async getOrders(userId?: string): Promise<Order[]> {\n    const orders = Array.from(this.orders.values());\n    if (userId) {\n      return orders.filter(order => order.userId === userId);\n    }\n    return orders;\n  }\n\n  async getOrder(id: string): Promise<Order | undefined> {\n    return this.orders.get(id);\n  }\n\n  async createOrder(insertOrder: InsertOrder): Promise<Order> {\n    const id = randomUUID();\n    const order: Order = {\n      ...insertOrder,\n      id,\n      createdAt: new Date(),\n    };\n    this.orders.set(id, order);\n    return order;\n  }\n\n  async updateOrderStatus(id: string, status: string): Promise<Order | undefined> {\n    const order = this.orders.get(id);\n    if (!order) return undefined;\n\n    const updatedOrder = { ...order, status };\n    this.orders.set(id, updatedOrder);\n    return updatedOrder;\n  }\n\n  // Custom Design methods\n  async getCustomDesigns(userId: string): Promise<CustomDesign[]> {\n    return Array.from(this.customDesigns.values()).filter(design => design.userId === userId);\n  }\n\n  async createCustomDesign(insertDesign: InsertCustomDesign): Promise<CustomDesign> {\n    const id = randomUUID();\n    const design: CustomDesign = {\n      ...insertDesign,\n      id,\n      createdAt: new Date(),\n    };\n    this.customDesigns.set(id, design);\n    return design;\n  }\n}\n\nexport const storage = new MemStorage();","size_bytes":17989},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, boolean, timestamp, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  name: text(\"name\").notNull(),\n  role: text(\"role\").notNull().default(\"user\"), // user, admin\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  image: text(\"image\"),\n  isPrimary: boolean(\"is_primary\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const products = pgTable(\"products\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  originalPrice: decimal(\"original_price\", { precision: 10, scale: 2 }),\n  categoryId: varchar(\"category_id\").references(() => categories.id),\n  images: text(\"images\").array(),\n  sizes: text(\"sizes\").array(),\n  colors: text(\"colors\").array(),\n  inventory: integer(\"inventory\").default(0),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"0\"),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const cartItems = pgTable(\"cart_items\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  productId: varchar(\"product_id\").references(() => products.id),\n  quantity: integer(\"quantity\").notNull().default(1),\n  size: text(\"size\"),\n  color: text(\"color\"),\n  customDesign: jsonb(\"custom_design\"), // For custom t-shirt designs\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const orders = pgTable(\"orders\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, packed, dispatched, shipped, delivered, cancelled\n  total: decimal(\"total\", { precision: 10, scale: 2 }).notNull(),\n  items: jsonb(\"items\").notNull(), // Array of order items\n  shippingAddress: jsonb(\"shipping_address\").notNull(),\n  paymentStatus: text(\"payment_status\").notNull().default(\"pending\"), // pending, paid, failed\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const customDesigns = pgTable(\"custom_designs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  name: text(\"name\").notNull(),\n  design: jsonb(\"design\").notNull(), // Design configuration\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertProductSchema = createInsertSchema(products).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCartItemSchema = createInsertSchema(cartItems).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertOrderSchema = createInsertSchema(orders).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertCustomDesignSchema = createInsertSchema(customDesigns).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Product = typeof products.$inferSelect;\nexport type InsertProduct = z.infer<typeof insertProductSchema>;\nexport type CartItem = typeof cartItems.$inferSelect;\nexport type InsertCartItem = z.infer<typeof insertCartItemSchema>;\nexport type Order = typeof orders.$inferSelect;\nexport type InsertOrder = z.infer<typeof insertOrderSchema>;\nexport type CustomDesign = typeof customDesigns.$inferSelect;\nexport type InsertCustomDesign = z.infer<typeof insertCustomDesignSchema>;\n","size_bytes":4522},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Layout from \"@/components/Layout\";\nimport Home from \"@/pages/Home\";\nimport Login from \"@/pages/Login\";\nimport Signup from \"@/pages/Signup\";\nimport Categories from \"@/pages/Categories\";\nimport Product from \"@/pages/Product\";\nimport Cart from \"@/pages/Cart\";\nimport Checkout from \"@/pages/Checkout\";\nimport Profile from \"@/pages/Profile\";\nimport Customize from \"@/pages/Customize\";\nimport AdminDashboard from \"@/pages/admin/Dashboard\";\nimport AdminProducts from \"@/pages/admin/Products\";\nimport AdminOrders from \"@/pages/admin/Orders\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/categories\" component={Categories} />\n        <Route path=\"/category/:slug\" component={Categories} />\n        <Route path=\"/product/:id\" component={Product} />\n        <Route path=\"/cart\" component={Cart} />\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/customize\" component={Customize} />\n        <Route path=\"/admin\" component={AdminDashboard} />\n        <Route path=\"/admin/products\" component={AdminProducts} />\n        <Route path=\"/admin/orders\" component={AdminOrders} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1931},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(355 91% 65%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(210 40% 96%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 96%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(355 91% 65%);\n  --radius: 0.75rem;\n  --chart-1: hsl(355 91% 65%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(355 91% 65%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(210 40% 96%);\n  --sidebar-accent-foreground: hsl(355 91% 65%);\n  --sidebar-border: hsl(214.3 31.8% 91.4%);\n  --sidebar-ring: hsl(355 91% 65%);\n  --font-sans: Inter, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(355 91% 65%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(210 25% 7.8431%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(355 91% 45%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(355 91% 65%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer components {\n  .animate-fade-in {\n    animation: fadeIn 0.8s ease-out;\n  }\n  \n  @keyframes fadeIn {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  .card-hover {\n    transition: all 0.3s ease;\n    transform-style: preserve-3d;\n  }\n  \n  .card-hover:hover {\n    transform: translateY(-8px) rotateX(5deg);\n    box-shadow: 0 20px 40px rgba(255, 87, 87, 0.15);\n  }\n  \n  .logo-pulse {\n    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n  \n  @keyframes pulse {\n    0%, 100% { opacity: 1; }\n    50% { opacity: 0.8; }\n  }\n  \n  .product-zoom {\n    transition: transform 0.3s ease;\n  }\n  \n  .product-zoom:hover {\n    transform: scale(1.05);\n  }\n  \n  .category-card {\n    background: linear-gradient(135deg, var(--background) 0%, var(--muted) 100%);\n  }\n\n  .category-card img {\n    aspect-ratio: 9/16;\n    object-fit: cover;\n  }\n  \n  .hero-gradient {\n    background: linear-gradient(135deg, hsl(355 91% 65%) 0%, hsl(355 91% 55%) 100%);\n  }\n\n  /* Breaking News Marquee Animation */\n  .animate-marquee {\n    animation: marquee 20s linear infinite;\n  }\n  \n  @keyframes marquee {\n    0% { transform: translateX(100%); }\n    100% { transform: translateX(-100%); }\n  }\n  \n  .hero-jersey-showcase {\n    position: relative;\n  }\n  \n  .hero-jersey-showcase::before {\n    content: '';\n    position: absolute;\n    top: -20px;\n    left: -20px;\n    right: -20px;\n    bottom: -20px;\n    background: linear-gradient(45deg, var(--primary), transparent, var(--primary));\n    border-radius: 20px;\n    z-index: -1;\n    opacity: 0.3;\n    animation: rotate 10s linear infinite;\n  }\n  \n  @keyframes rotate {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n  \n  .product-card-animation {\n    transform: translateY(0);\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  \n  .product-card-animation:hover {\n    transform: translateY(-12px);\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n  }\n  \n  .product-card-animation:nth-child(even) {\n    animation-delay: 0.1s;\n  }\n  \n  .product-card-animation:nth-child(3n) {\n    animation-delay: 0.2s;\n  }\n  \n  .product-card-animation:nth-child(4n) {\n    animation-delay: 0.3s;\n  }\n  \n  @keyframes slideInFromBottom {\n    0% {\n      transform: translateY(30px);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n  \n  .product-card-animation {\n    animation: slideInFromBottom 0.6s ease-out forwards;\n  }\n  \n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n  \n  .sports-category-hover {\n    transition: all 0.3s ease;\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .sports-category-hover::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    transition: left 0.5s;\n  }\n  \n  .sports-category-hover:hover::before {\n    left: 100%;\n  }\n  \n  .jersey-glow {\n    position: relative;\n  }\n  \n  .jersey-glow::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: radial-gradient(circle at center, var(--primary) 0%, transparent 70%);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n    border-radius: inherit;\n  }\n  \n  .jersey-glow:hover::after {\n    opacity: 0.1;\n  }\n}\n","size_bytes":5930},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/CategoryCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Category } from \"@shared/schema\";\n\ninterface CategoryCardProps {\n  category: Category;\n  size?: \"large\" | \"small\";\n}\n\nexport default function CategoryCard({ category, size = \"large\" }: CategoryCardProps) {\n  const isLarge = size === \"large\";\n  \n  return (\n    <Link href={`/category/${category.slug}`}>\n      <Card className=\"category-card rounded-xl card-hover cursor-pointer group\" data-testid={`card-category-${category.slug}`}>\n        <CardContent className={`${isLarge ? \"p-6\" : \"p-4\"} text-center`}>\n          <img\n            src={category.image || \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\"}\n            alt={category.name}\n            className={`${isLarge ? \"w-32 h-48\" : \"w-20 h-30\"} mx-auto mb-${isLarge ? \"4\" : \"3\"} rounded-xl object-cover product-zoom`}\n            style={{ aspectRatio: '9/16' }}\n            data-testid={`img-category-${category.slug}`}\n          />\n          <h3 className={`${isLarge ? \"font-semibold\" : \"font-medium\"} text-foreground group-hover:text-primary transition-colors`} data-testid={`text-category-name-${category.slug}`}>\n            {category.name}\n          </h3>\n          <p className={`${isLarge ? \"text-sm\" : \"text-xs\"} text-muted-foreground mt-1`} data-testid={`text-category-description-${category.slug}`}>\n            {category.description}\n          </p>\n        </CardContent>\n      </Card>\n    </Link>\n  );\n}\n","size_bytes":1534},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport logoPath from \"@assets/logo_transparent_1757364061106.png\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-foreground text-background py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"grid md:grid-cols-4 gap-8 mb-8\">\n          {/* Brand Section */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"w-10 h-10 bg-primary rounded-full flex items-center justify-center\">\n                <img src={logoPath} alt=\"KAMIO\" className=\"w-8 h-8 object-contain\" />\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold text-primary\">KAMIO</h3>\n                <p className=\"text-xs text-muted\">Custom Lifestyle</p>\n              </div>\n            </div>\n            <p className=\"text-muted text-sm mb-4\">\n              Creating custom apparel for sports teams, corporations, and individuals since 2020. Quality guaranteed.\n            </p>\n            <div className=\"flex space-x-3\">\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-facebook\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-instagram\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987 6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.324-1.297C4.198 14.895 3.708 13.744 3.708 12.447s.49-2.448 1.297-3.325C5.902 8.246 7.053 7.756 8.35 7.756s2.448.49 3.325 1.297c.807.876 1.297 2.027 1.297 3.324s-.49 2.448-1.297 3.325c-.876.807-2.027 1.297-3.325 1.297zm7.079 0c-1.297 0-2.448-.49-3.325-1.297-.807-.876-1.297-2.027-1.297-3.324s.49-2.448 1.297-3.325c.876-.807 2.027-1.297 3.325-1.297s2.448.49 3.324 1.297c.807.876 1.297 2.027 1.297 3.325s-.49 2.448-1.297 3.325c-.876.807-2.027 1.297-3.324 1.297z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-twitter\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                </svg>\n              </a>\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-linkedin\">\n                <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h4 className=\"font-semibold text-lg mb-4\">Quick Links</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li><Link href=\"/\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-home\">Home</Link></li>\n              <li><Link href=\"/categories\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-categories\">Categories</Link></li>\n              <li><Link href=\"/customize\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-customize\">Customize</Link></li>\n              <li><a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-about\">About Us</a></li>\n              <li><a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-contact\">Contact</a></li>\n            </ul>\n          </div>\n          \n          {/* Categories */}\n          <div>\n            <h4 className=\"font-semibold text-lg mb-4\">Categories</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li><Link href=\"/category/cricket\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-cricket\">Cricket</Link></li>\n              <li><Link href=\"/category/football\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-football\">Football</Link></li>\n              <li><Link href=\"/category/esports\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-esports\">Esports</Link></li>\n              <li><Link href=\"/category/corporate-uniforms\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-corporate\">Corporate</Link></li>\n              <li><Link href=\"/category/custom-flags\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-flags\">Custom Flags</Link></li>\n            </ul>\n          </div>\n          \n          {/* Contact Info */}\n          <div>\n            <h4 className=\"font-semibold text-lg mb-4\">Contact Info</h4>\n            <div className=\"space-y-3 text-sm text-muted\">\n              <div>\n                <p className=\"font-medium text-primary mb-1\">Address:</p>\n                <p>Shop No1,2,3, 2nd Floor, B-Block,</p>\n                <p>Indus Market Rd, near HDFC ATM,</p>\n                <p>Indus Towne, Ratanpur Sadak,</p>\n                <p>Bhopal, Madhya Pradesh 462043</p>\n              </div>\n              <div>\n                <p className=\"font-medium text-primary mb-1\">Phone:</p>\n                <a href=\"tel:+919575990599\" className=\"hover:text-primary transition-colors\" data-testid=\"link-footer-phone\">\n                  095759 90599\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-muted-foreground/20 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-muted text-sm mb-4 md:mb-0\" data-testid=\"text-footer-copyright\">\n              © 2024 KAMIO Custom Lifestyle. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 text-sm\">\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-privacy\">Privacy Policy</a>\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-terms\">Terms of Service</a>\n              <a href=\"#\" className=\"text-muted hover:text-primary transition-colors\" data-testid=\"link-footer-cookies\">Cookie Policy</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":7854},"client/src/components/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { isAuthenticated, getCurrentUser, logout, isAdmin } from \"@/lib/auth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Menu, Search, ShoppingCart, User, LogOut } from \"lucide-react\";\nimport logoPath from \"@assets/logo_transparent_1757364061106.png\";\n\nexport default function Header() {\n  const [, navigate] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const user = getCurrentUser();\n  const authenticated = isAuthenticated();\n\n  // Fetch cart items count\n  const { data: cartItems = [] } = useQuery({\n    queryKey: [\"/api/cart\"],\n    enabled: authenticated,\n  });\n\n  const cartItemCount = cartItems.length;\n\n  const handleLogout = () => {\n    logout();\n    navigate(\"/\");\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-background/95 backdrop-blur-md border-b border-border\">\n      {/* Breaking News Strip */}\n      <div className=\"bg-primary text-white py-2 overflow-hidden relative\">\n        <div className=\"animate-marquee whitespace-nowrap inline-block\">\n          <span className=\"text-sm font-medium mx-8\">\n            🔥 CENTRAL INDIA'S BIGGEST PRINTING SERVICE - FREE SHIPPING ON ALL ORDERS - CUSTOM JERSEYS STARTING ₹299 - BULK ORDERS GET EXTRA DISCOUNTS\n          </span>\n        </div>\n      </div>\n      <div className=\"container mx-auto px-4 py-3 flex items-center justify-between\">\n        {/* Logo */}\n        <Link href=\"/\" className=\"flex items-center space-x-3\" data-testid=\"link-home\">\n          <div className=\"w-12 h-12 md:w-14 md:h-14 bg-primary rounded-full flex items-center justify-center logo-pulse\">\n            <img src={logoPath} alt=\"KAMIO\" className=\"w-8 h-8 md:w-10 md:h-10 object-contain filter drop-shadow-sm\" />\n          </div>\n          <div>\n            <h1 className=\"text-xl md:text-2xl font-bold text-primary\">KAMIO</h1>\n            <p className=\"text-xs md:text-sm text-muted-foreground\">Custom Lifestyle</p>\n          </div>\n        </Link>\n        \n        {/* Desktop Navigation */}\n        <nav className=\"hidden md:flex items-center space-x-8\">\n          <Link href=\"/\" className=\"text-foreground hover:text-primary transition-colors\" data-testid=\"link-home-nav\">\n            Home\n          </Link>\n          <Link href=\"/categories\" className=\"text-foreground hover:text-primary transition-colors\" data-testid=\"link-categories\">\n            Categories\n          </Link>\n          <Link href=\"/customize\" className=\"text-foreground hover:text-primary transition-colors\" data-testid=\"link-customize\">\n            Customize\n          </Link>\n          {authenticated && isAdmin() && (\n            <Link href=\"/admin\" className=\"text-foreground hover:text-primary transition-colors\" data-testid=\"link-admin\">\n              Admin\n            </Link>\n          )}\n        </nav>\n        \n        {/* Actions */}\n        <div className=\"flex items-center space-x-4\">\n          {/* Search */}\n          <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-search\">\n            <Search className=\"h-5 w-5\" />\n          </Button>\n          \n          {/* Cart */}\n          {authenticated && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"relative\"\n              onClick={() => navigate(\"/cart\")}\n              data-testid=\"button-cart\"\n            >\n              <ShoppingCart className=\"h-5 w-5\" />\n              {cartItemCount > 0 && (\n                <Badge className=\"absolute -top-1 -right-1 h-5 w-5 flex items-center justify-center p-0 text-xs\" data-testid=\"text-cart-count\">\n                  {cartItemCount}\n                </Badge>\n              )}\n            </Button>\n          )}\n          \n          {/* User Menu */}\n          {authenticated ? (\n            <div className=\"hidden md:flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => navigate(\"/profile\")}\n                data-testid=\"button-profile\"\n              >\n                <User className=\"h-5 w-5\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={handleLogout}\n                data-testid=\"button-logout\"\n              >\n                <LogOut className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          ) : (\n            <div className=\"hidden md:flex items-center space-x-2\">\n              <Button variant=\"ghost\" onClick={() => navigate(\"/login\")} data-testid=\"button-login\">\n                Login\n              </Button>\n              <Button onClick={() => navigate(\"/signup\")} data-testid=\"button-signup\">\n                Sign Up\n              </Button>\n            </div>\n          )}\n          \n          {/* Mobile Menu Toggle */}\n          <Sheet open={mobileMenuOpen} onOpenChange={setMobileMenuOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" data-testid=\"button-mobile-menu\">\n                <Menu className=\"h-5 w-5\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-64\">\n              <div className=\"p-4\">\n                <div className=\"flex justify-between items-center mb-8\">\n                  <h2 className=\"font-bold text-lg\">Menu</h2>\n                </div>\n                <nav className=\"space-y-4\">\n                  <Link\n                    href=\"/\"\n                    className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                    onClick={() => setMobileMenuOpen(false)}\n                    data-testid=\"link-home-mobile\"\n                  >\n                    Home\n                  </Link>\n                  <Link\n                    href=\"/categories\"\n                    className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                    onClick={() => setMobileMenuOpen(false)}\n                    data-testid=\"link-categories-mobile\"\n                  >\n                    Categories\n                  </Link>\n                  <Link\n                    href=\"/customize\"\n                    className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                    onClick={() => setMobileMenuOpen(false)}\n                    data-testid=\"link-customize-mobile\"\n                  >\n                    Customize\n                  </Link>\n                  {authenticated && isAdmin() && (\n                    <Link\n                      href=\"/admin\"\n                      className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                      onClick={() => setMobileMenuOpen(false)}\n                      data-testid=\"link-admin-mobile\"\n                    >\n                      Admin\n                    </Link>\n                  )}\n                  <hr className=\"border-border my-4\" />\n                  {authenticated ? (\n                    <>\n                      <Link\n                        href=\"/profile\"\n                        className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                        onClick={() => setMobileMenuOpen(false)}\n                        data-testid=\"link-profile-mobile\"\n                      >\n                        <User className=\"inline mr-3 h-4 w-4\" />\n                        Profile\n                      </Link>\n                      <button\n                        onClick={() => {\n                          handleLogout();\n                          setMobileMenuOpen(false);\n                        }}\n                        className=\"block w-full text-left py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                        data-testid=\"button-logout-mobile\"\n                      >\n                        <LogOut className=\"inline mr-3 h-4 w-4\" />\n                        Logout\n                      </button>\n                    </>\n                  ) : (\n                    <>\n                      <Link\n                        href=\"/login\"\n                        className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                        onClick={() => setMobileMenuOpen(false)}\n                        data-testid=\"link-login-mobile\"\n                      >\n                        Login\n                      </Link>\n                      <Link\n                        href=\"/signup\"\n                        className=\"block py-3 px-4 text-foreground hover:bg-muted hover:text-primary rounded-lg transition-all\"\n                        onClick={() => setMobileMenuOpen(false)}\n                        data-testid=\"link-signup-mobile\"\n                      >\n                        Sign Up\n                      </Link>\n                    </>\n                  )}\n                </nav>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":9408},"client/src/components/Layout.tsx":{"content":"import { ReactNode } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  const [, navigate] = useLocation();\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground font-sans\">\n      <Header />\n      <main>{children}</main>\n      <Footer />\n      \n      {/* Floating Action Button */}\n      <div className=\"fixed bottom-6 right-6 z-40\">\n        <Button\n          onClick={() => navigate(\"/customize\")}\n          size=\"lg\"\n          className=\"w-14 h-14 rounded-full shadow-lg hover:shadow-xl hover:scale-105 transition-all group\"\n          title=\"Quick Customize\"\n          data-testid=\"button-customize-float\"\n        >\n          <svg className=\"w-6 h-6 group-hover:rotate-12 transition-transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n          </svg>\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1246},"client/src/components/ProductCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Heart, ShoppingCart, Star } from \"lucide-react\";\nimport { Product } from \"@shared/schema\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated } from \"@/lib/auth\";\nimport { useLocation } from \"wouter\";\nimport { createAuthenticatedRequest } from \"@/lib/auth\";\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nexport default function ProductCard({ product }: ProductCardProps) {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [, navigate] = useLocation();\n  const authenticated = isAuthenticated();\n\n  const addToCartMutation = useMutation({\n    mutationFn: async () => {\n      if (!authenticated) {\n        throw new Error(\"Please login to add items to cart\");\n      }\n      \n      const options = createAuthenticatedRequest(\"/api/cart\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          productId: product.id,\n          quantity: 1,\n          size: product.sizes?.[0] || \"M\",\n          color: product.colors?.[0] || \"Default\",\n        }),\n      });\n      \n      const response = await fetch(\"/api/cart\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to add to cart\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Added to cart\",\n        description: `${product.name} has been added to your cart.`,\n      });\n    },\n    onError: (error: Error) => {\n      if (error.message.includes(\"login\")) {\n        navigate(\"/login\");\n      } else {\n        toast({\n          title: \"Error\",\n          description: error.message,\n          variant: \"destructive\",\n        });\n      }\n    },\n  });\n\n  const handleAddToCart = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    addToCartMutation.mutate();\n  };\n\n  const hasDiscount = product.originalPrice && parseFloat(product.originalPrice) > parseFloat(product.price);\n\n  return (\n    <Card className=\"bg-card rounded-xl shadow-sm hover:shadow-lg transition-all card-hover group cursor-pointer\" data-testid={`card-product-${product.id}`}>\n      <Link href={`/product/${product.id}`}>\n        <div className=\"relative overflow-hidden rounded-t-xl\">\n          <img\n            src={product.images?.[0] || \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&h=600\"}\n            alt={product.name}\n            className=\"w-full h-64 object-cover product-zoom\"\n            data-testid={`img-product-${product.id}`}\n          />\n          <div className=\"absolute top-4 left-4\">\n            {hasDiscount && (\n              <Badge className=\"bg-primary text-primary-foreground\" data-testid=\"badge-discount\">\n                Sale\n              </Badge>\n            )}\n          </div>\n          <div className=\"absolute top-4 right-4\">\n            <Button\n              variant=\"secondary\"\n              size=\"icon\"\n              className=\"bg-background/80 backdrop-blur-sm hover:text-primary\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                // TODO: Implement wishlist functionality\n              }}\n              data-testid={`button-wishlist-${product.id}`}\n            >\n              <Heart className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </Link>\n      \n      <CardContent className=\"p-4\">\n        <Link href={`/product/${product.id}`}>\n          <h3 className=\"font-semibold text-foreground group-hover:text-primary transition-colors mb-2\" data-testid={`text-product-name-${product.id}`}>\n            {product.name}\n          </h3>\n          <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\" data-testid={`text-product-description-${product.id}`}>\n            {product.description}\n          </p>\n        </Link>\n        \n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-lg font-bold text-primary\" data-testid={`text-product-price-${product.id}`}>\n              ₹{product.price}\n            </span>\n            {hasDiscount && (\n              <span className=\"text-sm text-muted-foreground line-through\" data-testid={`text-product-original-price-${product.id}`}>\n                ₹{product.originalPrice}\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center text-sm text-muted-foreground\">\n            <Star className=\"h-4 w-4 text-yellow-500 mr-1\" />\n            <span data-testid={`text-product-rating-${product.id}`}>{product.rating || \"4.5\"}</span>\n          </div>\n        </div>\n        \n        <Button\n          onClick={handleAddToCart}\n          disabled={addToCartMutation.isPending}\n          className=\"w-full\"\n          data-testid={`button-add-to-cart-${product.id}`}\n        >\n          <ShoppingCart className=\"h-4 w-4 mr-2\" />\n          {addToCartMutation.isPending ? \"Adding...\" : \"Add to Cart\"}\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5508},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/auth.ts":{"content":"import { apiRequest } from \"@/lib/queryClient\";\n\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n}\n\nexport function getAuthToken(): string | null {\n  return localStorage.getItem(\"authToken\");\n}\n\nexport function setAuthToken(token: string): void {\n  localStorage.setItem(\"authToken\", token);\n}\n\nexport function removeAuthToken(): void {\n  localStorage.removeItem(\"authToken\");\n}\n\nexport function getCurrentUser(): User | null {\n  const userStr = localStorage.getItem(\"currentUser\");\n  return userStr ? JSON.parse(userStr) : null;\n}\n\nexport function setCurrentUser(user: User): void {\n  localStorage.setItem(\"currentUser\", JSON.stringify(user));\n}\n\nexport function removeCurrentUser(): void {\n  localStorage.removeItem(\"currentUser\");\n}\n\nexport function isAuthenticated(): boolean {\n  return !!getAuthToken();\n}\n\nexport function isAdmin(): boolean {\n  const user = getCurrentUser();\n  return user?.role === \"admin\";\n}\n\nexport async function login(email: string, password: string): Promise<AuthResponse> {\n  const response = await apiRequest(\"POST\", \"/api/auth/login\", { email, password });\n  const data: AuthResponse = await response.json();\n  \n  setAuthToken(data.token);\n  setCurrentUser(data.user);\n  \n  return data;\n}\n\nexport async function signup(email: string, password: string, name: string): Promise<AuthResponse> {\n  const response = await apiRequest(\"POST\", \"/api/auth/signup\", { email, password, name });\n  const data: AuthResponse = await response.json();\n  \n  setAuthToken(data.token);\n  setCurrentUser(data.user);\n  \n  return data;\n}\n\nexport function logout(): void {\n  removeAuthToken();\n  removeCurrentUser();\n}\n\n// Add token to fetch requests\nexport function createAuthenticatedRequest(url: string, options: RequestInit = {}): RequestInit {\n  const token = getAuthToken();\n  if (token) {\n    return {\n      ...options,\n      headers: {\n        ...options.headers,\n        'Authorization': `Bearer ${token}`,\n      },\n    };\n  }\n  return options;\n}\n","size_bytes":2068},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/Cart.tsx":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { Trash2, Plus, Minus, ShoppingBag, ArrowRight } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface CartItemWithProduct {\n  id: string;\n  productId: string;\n  quantity: number;\n  size?: string;\n  color?: string;\n  customDesign?: any;\n  product?: {\n    id: string;\n    name: string;\n    price: string;\n    images?: string[];\n    description?: string;\n  };\n}\n\nexport default function Cart() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n\n  const { data: cartItems = [], isLoading } = useQuery<CartItemWithProduct[]>({\n    queryKey: [\"/api/cart\"],\n    enabled: authenticated,\n  });\n\n  const updateQuantityMutation = useMutation({\n    mutationFn: async ({ itemId, quantity }: { itemId: string; quantity: number }) => {\n      const options = createAuthenticatedRequest(`/api/cart/${itemId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ quantity }),\n      });\n      \n      const response = await fetch(`/api/cart/${itemId}`, options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to update quantity\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const removeItemMutation = useMutation({\n    mutationFn: async (itemId: string) => {\n      const options = createAuthenticatedRequest(`/api/cart/${itemId}`, {\n        method: \"DELETE\",\n      });\n      \n      const response = await fetch(`/api/cart/${itemId}`, options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to remove item\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Item removed\",\n        description: \"Item has been removed from your cart.\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const clearCartMutation = useMutation({\n    mutationFn: async () => {\n      const options = createAuthenticatedRequest(\"/api/cart\", {\n        method: \"DELETE\",\n      });\n      \n      const response = await fetch(\"/api/cart\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to clear cart\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Cart cleared\",\n        description: \"All items have been removed from your cart.\",\n      });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!authenticated) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-login-required\">\n            Please login to view your cart\n          </h1>\n          <Button onClick={() => navigate(\"/login\")} data-testid=\"button-login\">\n            Login\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const subtotal = cartItems.reduce((total, item) => {\n    return total + (parseFloat(item.product?.price || \"0\") * item.quantity);\n  }, 0);\n\n  const shipping = subtotal > 500 ? 0 : 50;\n  const total = subtotal + shipping;\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2 space-y-4\">\n              {[...Array(3)].map((_, i) => (\n                <Skeleton key={i} className=\"h-32 rounded-xl\" />\n              ))}\n            </div>\n            <div>\n              <Skeleton className=\"h-64 rounded-xl\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (cartItems.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <ShoppingBag className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-empty-cart\">\n            Your cart is empty\n          </h1>\n          <p className=\"text-muted-foreground mb-8\">\n            Add some amazing products to get started\n          </p>\n          <Button onClick={() => navigate(\"/categories\")} data-testid=\"button-shop-now\">\n            Shop Now\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-cart-title\">\n            Shopping Cart\n          </h1>\n          <p className=\"text-muted-foreground\" data-testid=\"text-cart-count\">\n            {cartItems.length} {cartItems.length === 1 ? \"item\" : \"items\"} in your cart\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Cart Items */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"space-y-4\">\n              {cartItems.map((item) => (\n                <Card key={item.id} data-testid={`cart-item-${item.id}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center space-x-4\">\n                      <img\n                        src={item.product?.images?.[0] || \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=200\"}\n                        alt={item.product?.name}\n                        className=\"w-20 h-20 object-cover rounded-lg\"\n                        data-testid={`img-cart-item-${item.id}`}\n                      />\n                      \n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-foreground mb-1\" data-testid={`text-cart-item-name-${item.id}`}>\n                          {item.product?.name}\n                        </h3>\n                        <p className=\"text-sm text-muted-foreground mb-2\" data-testid={`text-cart-item-description-${item.id}`}>\n                          {item.product?.description}\n                        </p>\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          {item.size && (\n                            <Badge variant=\"secondary\" data-testid={`badge-cart-item-size-${item.id}`}>\n                              Size: {item.size}\n                            </Badge>\n                          )}\n                          {item.color && (\n                            <Badge variant=\"secondary\" data-testid={`badge-cart-item-color-${item.id}`}>\n                              Color: {item.color}\n                            </Badge>\n                          )}\n                        </div>\n                        <p className=\"text-lg font-bold text-primary\" data-testid={`text-cart-item-price-${item.id}`}>\n                          ₹{item.product?.price}\n                        </p>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"icon\"\n                          onClick={() => updateQuantityMutation.mutate({ \n                            itemId: item.id, \n                            quantity: Math.max(1, item.quantity - 1) \n                          })}\n                          disabled={item.quantity <= 1 || updateQuantityMutation.isPending}\n                          data-testid={`button-decrease-${item.id}`}\n                        >\n                          <Minus className=\"h-4 w-4\" />\n                        </Button>\n                        \n                        <span className=\"w-12 text-center font-medium\" data-testid={`text-cart-item-quantity-${item.id}`}>\n                          {item.quantity}\n                        </span>\n                        \n                        <Button\n                          variant=\"outline\"\n                          size=\"icon\"\n                          onClick={() => updateQuantityMutation.mutate({ \n                            itemId: item.id, \n                            quantity: item.quantity + 1 \n                          })}\n                          disabled={updateQuantityMutation.isPending}\n                          data-testid={`button-increase-${item.id}`}\n                        >\n                          <Plus className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      \n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => removeItemMutation.mutate(item.id)}\n                        disabled={removeItemMutation.isPending}\n                        className=\"text-red-500 hover:text-red-700\"\n                        data-testid={`button-remove-${item.id}`}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            <div className=\"mt-6 flex justify-between items-center\">\n              <Button\n                variant=\"outline\"\n                onClick={() => clearCartMutation.mutate()}\n                disabled={clearCartMutation.isPending}\n                data-testid=\"button-clear-cart\"\n              >\n                Clear Cart\n              </Button>\n              <Button\n                variant=\"ghost\"\n                onClick={() => navigate(\"/categories\")}\n                data-testid=\"button-continue-shopping\"\n              >\n                Continue Shopping\n              </Button>\n            </div>\n          </div>\n\n          {/* Order Summary */}\n          <div>\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold mb-4\" data-testid=\"text-order-summary\">\n                  Order Summary\n                </h3>\n                \n                <div className=\"space-y-3 mb-6\">\n                  <div className=\"flex justify-between\">\n                    <span>Subtotal</span>\n                    <span data-testid=\"text-subtotal\">₹{subtotal.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Shipping</span>\n                    <span data-testid=\"text-shipping\">\n                      {shipping === 0 ? \"Free\" : `₹${shipping.toFixed(2)}`}\n                    </span>\n                  </div>\n                  {subtotal < 500 && (\n                    <p className=\"text-sm text-muted-foreground\">\n                      Add ₹{(500 - subtotal).toFixed(2)} more for free shipping\n                    </p>\n                  )}\n                  <hr className=\"border-border\" />\n                  <div className=\"flex justify-between text-lg font-semibold\">\n                    <span>Total</span>\n                    <span data-testid=\"text-total\">₹{total.toFixed(2)}</span>\n                  </div>\n                </div>\n                \n                <Button\n                  onClick={() => navigate(\"/checkout\")}\n                  className=\"w-full\"\n                  size=\"lg\"\n                  data-testid=\"button-checkout\"\n                >\n                  Proceed to Checkout\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12704},"client/src/pages/Categories.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"wouter\";\nimport ProductCard from \"@/components/ProductCard\";\nimport CategoryCard from \"@/components/CategoryCard\";\nimport { Category, Product } from \"@shared/schema\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function Categories() {\n  const params = useParams();\n  const selectedSlug = params.slug;\n\n  const { data: categories = [], isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const selectedCategory = selectedSlug \n    ? categories.find(cat => cat.slug === selectedSlug)\n    : null;\n\n  const { data: products = [], isLoading: productsLoading } = useQuery<Product[]>({\n    queryKey: selectedCategory \n      ? [\"/api/categories\", selectedCategory.id, \"products\"]\n      : [\"/api/products\"],\n  });\n\n  if (categoriesLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            {[...Array(6)].map((_, i) => (\n              <Skeleton key={i} className=\"h-32 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\" data-testid=\"text-page-title\">\n            {selectedCategory ? selectedCategory.name : \"All Categories\"}\n          </h1>\n          <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\" data-testid=\"text-page-description\">\n            {selectedCategory \n              ? `Explore our ${selectedCategory.name.toLowerCase()} collection`\n              : \"Browse all our custom apparel categories\"\n            }\n          </p>\n        </div>\n\n        {!selectedCategory && (\n          <>\n            {/* All Categories View */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"text-primary-categories\">\n                Primary Categories\n              </h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-8\">\n                {categories.filter(cat => cat.isPrimary).map((category) => (\n                  <CategoryCard key={category.id} category={category} />\n                ))}\n              </div>\n\n              <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"text-secondary-categories\">\n                More Categories\n              </h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {categories.filter(cat => !cat.isPrimary).map((category) => (\n                  <CategoryCard key={category.id} category={category} size=\"small\" />\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* Products Section */}\n        <div>\n          <h2 className=\"text-2xl font-bold mb-8\" data-testid=\"text-products-section\">\n            {selectedCategory ? `${selectedCategory.name} Products` : \"All Products\"}\n          </h2>\n          \n          {productsLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {[...Array(8)].map((_, i) => (\n                <div key={i} className=\"space-y-3\">\n                  <Skeleton className=\"h-64 rounded-xl\" />\n                  <Skeleton className=\"h-4 w-full\" />\n                  <Skeleton className=\"h-4 w-2/3\" />\n                  <Skeleton className=\"h-10 w-full\" />\n                </div>\n              ))}\n            </div>\n          ) : products.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <p className=\"text-muted-foreground text-lg\" data-testid=\"text-no-products\">\n                No products found in this category.\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {products.map((product) => (\n                <ProductCard key={product.id} product={product} />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4246},"client/src/pages/Checkout.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { CreditCard, Lock } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nconst checkoutSchema = z.object({\n  firstName: z.string().min(2, \"First name must be at least 2 characters\"),\n  lastName: z.string().min(2, \"Last name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().min(10, \"Please enter a valid phone number\"),\n  address: z.string().min(10, \"Please enter your full address\"),\n  city: z.string().min(2, \"Please enter your city\"),\n  state: z.string().min(2, \"Please enter your state\"),\n  pincode: z.string().min(6, \"Please enter a valid pincode\"),\n  country: z.string().default(\"India\"),\n});\n\ntype CheckoutForm = z.infer<typeof checkoutSchema>;\n\ninterface CartItemWithProduct {\n  id: string;\n  productId: string;\n  quantity: number;\n  size?: string;\n  color?: string;\n  product?: {\n    id: string;\n    name: string;\n    price: string;\n    images?: string[];\n  };\n}\n\nexport default function Checkout() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const { data: cartItems = [], isLoading } = useQuery<CartItemWithProduct[]>({\n    queryKey: [\"/api/cart\"],\n    enabled: authenticated,\n  });\n\n  const form = useForm<CheckoutForm>({\n    resolver: zodResolver(checkoutSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      pincode: \"\",\n      country: \"India\",\n    },\n  });\n\n  const createOrderMutation = useMutation({\n    mutationFn: async (orderData: CheckoutForm) => {\n      const items = cartItems.map(item => ({\n        productId: item.productId,\n        quantity: item.quantity,\n        size: item.size,\n        color: item.color,\n        price: item.product?.price || \"0\",\n        name: item.product?.name || \"\",\n      }));\n\n      const total = cartItems.reduce((sum, item) => {\n        return sum + (parseFloat(item.product?.price || \"0\") * item.quantity);\n      }, 0);\n\n      const shipping = total > 500 ? 0 : 50;\n      const finalTotal = total + shipping;\n\n      const options = createAuthenticatedRequest(\"/api/orders\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          total: finalTotal.toString(),\n          items,\n          shippingAddress: {\n            firstName: orderData.firstName,\n            lastName: orderData.lastName,\n            email: orderData.email,\n            phone: orderData.phone,\n            address: orderData.address,\n            city: orderData.city,\n            state: orderData.state,\n            pincode: orderData.pincode,\n            country: orderData.country,\n          },\n          paymentStatus: \"paid\", // Simulated payment success\n        }),\n      });\n      \n      const response = await fetch(\"/api/orders\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to create order\");\n      }\n      return response.json();\n    },\n    onSuccess: (order) => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/orders\"] });\n      \n      toast({\n        title: \"Order placed successfully!\",\n        description: `Your order #${order.id.slice(0, 8)} has been confirmed.`,\n      });\n      \n      navigate(\"/profile\");\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Order failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = async (data: CheckoutForm) => {\n    setIsProcessing(true);\n    try {\n      // Simulate payment processing\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      await createOrderMutation.mutateAsync(data);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (!authenticated) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-login-required\">\n            Please login to checkout\n          </h1>\n          <Button onClick={() => navigate(\"/login\")} data-testid=\"button-login\">\n            Login\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            <Skeleton className=\"h-96 rounded-xl\" />\n            <Skeleton className=\"h-96 rounded-xl\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (cartItems.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-empty-cart\">\n            Your cart is empty\n          </h1>\n          <Button onClick={() => navigate(\"/categories\")} data-testid=\"button-shop-now\">\n            Shop Now\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const subtotal = cartItems.reduce((total, item) => {\n    return total + (parseFloat(item.product?.price || \"0\") * item.quantity);\n  }, 0);\n\n  const shipping = subtotal > 500 ? 0 : 50;\n  const total = subtotal + shipping;\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-checkout-title\">\n            Checkout\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Complete your order details below\n          </p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Checkout Form */}\n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <CreditCard className=\"mr-2 h-5 w-5\" />\n                  Shipping Information\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"firstName\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>First Name</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-first-name\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={form.control}\n                        name=\"lastName\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Last Name</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-last-name\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"email\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Email</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                type=\"email\"\n                                disabled={isProcessing}\n                                data-testid=\"input-email\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={form.control}\n                        name=\"phone\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Phone</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                type=\"tel\"\n                                disabled={isProcessing}\n                                data-testid=\"input-phone\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <FormField\n                      control={form.control}\n                      name=\"address\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Address</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              {...field}\n                              disabled={isProcessing}\n                              data-testid=\"input-address\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"city\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>City</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-city\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={form.control}\n                        name=\"state\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>State</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-state\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <FormField\n                        control={form.control}\n                        name=\"pincode\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Pincode</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-pincode\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                      <FormField\n                        control={form.control}\n                        name=\"country\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Country</FormLabel>\n                            <FormControl>\n                              <Input\n                                {...field}\n                                disabled={isProcessing}\n                                data-testid=\"input-country\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    </div>\n\n                    <Button\n                      type=\"submit\"\n                      className=\"w-full\"\n                      size=\"lg\"\n                      disabled={isProcessing}\n                      data-testid=\"button-place-order\"\n                    >\n                      <Lock className=\"mr-2 h-4 w-4\" />\n                      {isProcessing ? \"Processing...\" : `Place Order (₹${total.toFixed(2)})`}\n                    </Button>\n                  </form>\n                </Form>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Order Summary */}\n          <div>\n            <Card>\n              <CardHeader>\n                <CardTitle>Order Summary</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {cartItems.map((item) => (\n                  <div key={item.id} className=\"flex items-center space-x-3\" data-testid={`order-item-${item.id}`}>\n                    <img\n                      src={item.product?.images?.[0] || \"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"}\n                      alt={item.product?.name}\n                      className=\"w-12 h-12 object-cover rounded\"\n                      data-testid={`img-order-item-${item.id}`}\n                    />\n                    <div className=\"flex-1\">\n                      <h4 className=\"font-medium\" data-testid={`text-order-item-name-${item.id}`}>\n                        {item.product?.name}\n                      </h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {item.size && `Size: ${item.size}`}\n                        {item.size && item.color && \" • \"}\n                        {item.color && `Color: ${item.color}`}\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium\" data-testid={`text-order-item-total-${item.id}`}>\n                        ₹{(parseFloat(item.product?.price || \"0\") * item.quantity).toFixed(2)}\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Qty: {item.quantity}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n\n                <hr className=\"border-border\" />\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span>Subtotal</span>\n                    <span data-testid=\"text-order-subtotal\">₹{subtotal.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Shipping</span>\n                    <span data-testid=\"text-order-shipping\">\n                      {shipping === 0 ? \"Free\" : `₹${shipping.toFixed(2)}`}\n                    </span>\n                  </div>\n                  <hr className=\"border-border\" />\n                  <div className=\"flex justify-between text-lg font-semibold\">\n                    <span>Total</span>\n                    <span data-testid=\"text-order-total\">₹{total.toFixed(2)}</span>\n                  </div>\n                </div>\n\n                <div className=\"bg-muted/50 p-4 rounded-lg\">\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\n                    <Lock className=\"mr-2 h-4 w-4\" />\n                    Your payment information is secure and encrypted\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":17599},"client/src/pages/Customize.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { useLocation } from \"wouter\";\nimport { Upload, RotateCcw, RotateCw, ShoppingCart } from \"lucide-react\";\n\ninterface DesignConfig {\n  scale: number;\n  rotation: number;\n  x: number;\n  y: number;\n  image?: string;\n}\n\nexport default function Customize() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n  \n  const [selectedColor, setSelectedColor] = useState(\"white\");\n  const [selectedSize, setSelectedSize] = useState(\"M\");\n  const [viewMode, setViewMode] = useState<\"front\" | \"back\">(\"front\");\n  const [design, setDesign] = useState<DesignConfig>({\n    scale: 100,\n    rotation: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const colors = [\n    { name: \"White\", value: \"white\", color: \"#FFFFFF\" },\n    { name: \"Black\", value: \"black\", color: \"#000000\" },\n    { name: \"Red\", value: \"red\", color: \"#E30613\" },\n    { name: \"Blue\", value: \"blue\", color: \"#3B82F6\" },\n    { name: \"Green\", value: \"green\", color: \"#10B981\" },\n  ];\n\n  // T-shirt image mapping\n  const getTShirtImage = (color: string, view: \"front\" | \"back\") => {\n    const imageMap = {\n      white: {\n        front: \"/generated_images/Fair_model_white_t-shirt_front_8b4dd000.png\",\n        back: \"/generated_images/Fair_model_white_t-shirt_back_9b09833d.png\"\n      },\n      red: {\n        front: \"/generated_images/Fair_model_red_t-shirt_front_90e3704d.png\",\n        back: \"/generated_images/Fair_model_white_t-shirt_back_9b09833d.png\"\n      },\n      blue: {\n        front: \"/generated_images/Fair_model_blue_t-shirt_front_797a4390.png\",\n        back: \"/generated_images/Fair_model_white_t-shirt_back_9b09833d.png\"\n      },\n      black: {\n        front: \"/generated_images/Fair_model_black_t-shirt_front_70633eb0.png\",\n        back: \"/generated_images/Fair_model_white_t-shirt_back_9b09833d.png\"\n      },\n      green: {\n        front: \"/generated_images/Fair_model_green_t-shirt_front_8ef122f7.png\",\n        back: \"/generated_images/Fair_model_white_t-shirt_back_9b09833d.png\"\n      }\n    };\n    \n    return imageMap[color as keyof typeof imageMap]?.[view] || imageMap.white[view];\n  };\n\n  const sizes = [\"XS\", \"S\", \"M\", \"L\", \"XL\"];\n\n  const basePrice = 400;\n  const designPrice = Math.floor((design.scale - 50) * 2);\n  const totalPrice = basePrice + Math.max(designPrice, 0);\n\n  const addToCartMutation = useMutation({\n    mutationFn: async () => {\n      if (!authenticated) {\n        throw new Error(\"Please login to add custom design to cart\");\n      }\n      \n      const options = createAuthenticatedRequest(\"/api/cart\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          productId: \"custom-tshirt\", // Special product ID for custom designs\n          quantity: 1,\n          size: selectedSize,\n          color: selectedColor,\n          customDesign: {\n            ...design,\n            color: selectedColor,\n            size: selectedSize,\n            price: totalPrice,\n          },\n        }),\n      });\n      \n      const response = await fetch(\"/api/cart\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to add to cart\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Added to cart\",\n        description: \"Your custom t-shirt has been added to cart.\",\n      });\n    },\n    onError: (error: Error) => {\n      if (error.message.includes(\"login\")) {\n        navigate(\"/login\");\n      } else {\n        toast({\n          title: \"Error\",\n          description: error.message,\n          variant: \"destructive\",\n        });\n      }\n    },\n  });\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (file.size > 10 * 1024 * 1024) {\n        toast({\n          title: \"File too large\",\n          description: \"Please select a file smaller than 10MB.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setDesign(prev => ({\n          ...prev,\n          image: e.target?.result as string,\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleRotateLeft = () => {\n    setDesign(prev => ({\n      ...prev,\n      rotation: prev.rotation - 15,\n    }));\n  };\n\n  const handleRotateRight = () => {\n    setDesign(prev => ({\n      ...prev,\n      rotation: prev.rotation + 15,\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\" data-testid=\"text-customize-title\">\n            3D T-Shirt Customizer\n          </h1>\n          <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\" data-testid=\"text-customize-description\">\n            Design your perfect t-shirt with our interactive 3D preview. Upload your logo, adjust positioning, and see your creation come to life.\n          </p>\n        </div>\n\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            {/* 3D Preview */}\n            <div className=\"relative\">\n              <Card className=\"shadow-lg\">\n                <CardContent className=\"p-8\">\n                  <div className=\"aspect-square bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl flex items-center justify-center relative overflow-hidden\">\n                    {/* T-shirt mockup */}\n                    <div className=\"w-full h-full flex items-center justify-center relative\">\n                      {/* T-shirt base image */}\n                      <img\n                        src={getTShirtImage(selectedColor, viewMode)}\n                        alt={`${selectedColor} t-shirt ${viewMode} view`}\n                        className=\"w-full h-full object-cover rounded-xl\"\n                        data-testid=\"img-tshirt-preview\"\n                      />\n                      \n                      {/* Design Overlay Area */}\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <div \n                          className={`w-32 h-32 border-2 border-primary/50 border-dashed rounded-lg flex items-center justify-center bg-background/80 backdrop-blur-sm transition-all ${\n                            design.image ? 'border-solid border-primary' : ''\n                          }`}\n                          style={{\n                            transform: `translate(${design.x}px, ${design.y}px) scale(${design.scale / 100}) rotate(${design.rotation}deg)`,\n                          }}\n                          data-testid=\"design-preview-area\"\n                        >\n                          {design.image ? (\n                            <img\n                              src={design.image}\n                              alt=\"Custom design\"\n                              className=\"w-full h-full object-contain\"\n                              data-testid=\"img-custom-design\"\n                            />\n                          ) : (\n                            <div className=\"text-center\">\n                              <Upload className=\"h-8 w-8 text-primary mb-2 mx-auto\" />\n                              <p className=\"text-xs text-muted-foreground\">Drop logo here</p>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* View Controls */}\n                  <div className=\"flex justify-center mt-6 space-x-2\">\n                    <Button\n                      variant={viewMode === \"front\" ? \"default\" : \"outline\"}\n                      onClick={() => setViewMode(\"front\")}\n                      className=\"px-6\"\n                      data-testid=\"button-front-view\"\n                    >\n                      Front View\n                    </Button>\n                    <Button\n                      variant={viewMode === \"back\" ? \"default\" : \"outline\"}\n                      onClick={() => setViewMode(\"back\")}\n                      className=\"px-6\"\n                      data-testid=\"button-back-view\"\n                    >\n                      Back View\n                    </Button>\n                  </div>\n                  \n                  {/* 3D Controls */}\n                  <div className=\"flex justify-center mt-4 space-x-4\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={handleRotateLeft}\n                      data-testid=\"button-rotate-left\"\n                    >\n                      <RotateCcw className=\"mr-2 h-4 w-4\" />\n                      Rotate Left\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      onClick={handleRotateRight}\n                      data-testid=\"button-rotate-right\"\n                    >\n                      <RotateCw className=\"mr-2 h-4 w-4\" />\n                      Rotate Right\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            \n            {/* Customization Panel */}\n            <div className=\"space-y-6\">\n              {/* Upload Section */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Upload Your Design</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"border-2 border-dashed border-border rounded-lg p-6 text-center hover:border-primary transition-colors cursor-pointer\">\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleFileUpload}\n                      className=\"hidden\"\n                      id=\"design-upload\"\n                      data-testid=\"input-file-upload\"\n                    />\n                    <label htmlFor=\"design-upload\" className=\"cursor-pointer\">\n                      <Upload className=\"h-12 w-12 text-muted-foreground mb-3 mx-auto\" />\n                      <p className=\"text-muted-foreground mb-2\">Drag & drop your image or</p>\n                      <Button variant=\"link\" className=\"text-primary hover:underline p-0\" data-testid=\"button-browse-files\">\n                        Browse Files\n                      </Button>\n                      <p className=\"text-xs text-muted-foreground mt-2\">\n                        Supports PNG, JPG, SVG (Max 10MB)\n                      </p>\n                    </label>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* T-shirt Options */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>T-shirt Options</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {/* Color Selection */}\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Color</label>\n                    <div className=\"flex space-x-2\">\n                      {colors.map((color) => (\n                        <button\n                          key={color.value}\n                          onClick={() => setSelectedColor(color.value)}\n                          className={`w-10 h-10 rounded-full border-2 transition-colors ${\n                            selectedColor === color.value ? 'border-primary' : 'border-border'\n                          }`}\n                          style={{ backgroundColor: color.color }}\n                          title={color.name}\n                          data-testid={`button-color-${color.value}`}\n                        />\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {/* Size Selection */}\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Size</label>\n                    <div className=\"grid grid-cols-5 gap-2\">\n                      {sizes.map((size) => (\n                        <Button\n                          key={size}\n                          variant={selectedSize === size ? \"default\" : \"outline\"}\n                          onClick={() => setSelectedSize(size)}\n                          data-testid={`button-size-${size}`}\n                        >\n                          {size}\n                        </Button>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* Design Controls */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Design Position</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">\n                      Scale: {design.scale}%\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"50\"\n                      max=\"150\"\n                      value={design.scale}\n                      onChange={(e) => setDesign(prev => ({ ...prev, scale: parseInt(e.target.value) }))}\n                      className=\"w-full\"\n                      data-testid=\"slider-scale\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">\n                      Rotation: {design.rotation}°\n                    </label>\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"360\"\n                      value={design.rotation}\n                      onChange={(e) => setDesign(prev => ({ ...prev, rotation: parseInt(e.target.value) }))}\n                      className=\"w-full\"\n                      data-testid=\"slider-rotation\"\n                    />\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">\n                        X Position: {design.x}\n                      </label>\n                      <input\n                        type=\"range\"\n                        min=\"-50\"\n                        max=\"50\"\n                        value={design.x}\n                        onChange={(e) => setDesign(prev => ({ ...prev, x: parseInt(e.target.value) }))}\n                        className=\"w-full\"\n                        data-testid=\"slider-x-position\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">\n                        Y Position: {design.y}\n                      </label>\n                      <input\n                        type=\"range\"\n                        min=\"-50\"\n                        max=\"50\"\n                        value={design.y}\n                        onChange={(e) => setDesign(prev => ({ ...prev, y: parseInt(e.target.value) }))}\n                        className=\"w-full\"\n                        data-testid=\"slider-y-position\"\n                      />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* Price & Add to Cart */}\n              <Card className=\"border-2 border-primary/20\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <span className=\"text-lg font-semibold\">Total Price:</span>\n                    <span className=\"text-2xl font-bold text-primary\" data-testid=\"text-total-price\">\n                      ₹{totalPrice}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-muted-foreground mb-4\">\n                    <p>• Base price: ₹{basePrice}</p>\n                    <p>• Design area: ₹{Math.max(designPrice, 0)}</p>\n                  </div>\n                  <Button\n                    onClick={() => addToCartMutation.mutate()}\n                    disabled={addToCartMutation.isPending}\n                    className=\"w-full\"\n                    size=\"lg\"\n                    data-testid=\"button-add-to-cart\"\n                  >\n                    <ShoppingCart className=\"mr-2 h-4 w-4\" />\n                    {addToCartMutation.isPending ? \"Adding...\" : \"Add to Cart\"}\n                  </Button>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":17388},"client/src/pages/Home.tsx":{"content":"\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Paintbrush2, Play, Truck, Shield, Users, Star, ArrowRight, Zap, Award, Clock, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState, useEffect } from \"react\";\nimport type { Product, Category } from \"@/../../shared/schema\";\n\nfunction Home() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  \n  const heroImages = [\n    \"/attached_assets/imgi_6_default_1757362105659.jpg\",\n    \"/attached_assets/imgi_17_default_1757362105660.jpg\",\n    \"/attached_assets/imgi_33_default_1757362105661.jpg\",\n    \"/attached_assets/imgi_37_default_1757362105661.jpg\",\n    \"/attached_assets/imgi_51_default_1757362105662.jpg\"\n  ];\n\n  const { data: products } = useQuery({\n    queryKey: [\"products\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/products\");\n      if (!response.ok) throw new Error(\"Failed to fetch products\");\n      return response.json() as Product[];\n    },\n  });\n\n  const { data: categories } = useQuery({\n    queryKey: [\"categories\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/categories\");\n      if (!response.ok) throw new Error(\"Failed to fetch categories\");\n      return response.json() as Category[];\n    },\n  });\n\n  const featuredProducts = products?.slice(0, 8) || [];\n  const customCategories = [\n    { id: \"1\", name: \"Cricket\", slug: \"cricket\", image: \"/attached_assets/cricket jersey_1757362287518.png\" },\n    { id: \"2\", name: \"Football\", slug: \"football\", image: \"/attached_assets/fotball_1757362287519.png\" },\n    { id: \"3\", name: \"E-Sports\", slug: \"esports\", image: \"/attached_assets/esports kamio_1757362287519.png\" },\n    { id: \"4\", name: \"Biker\", slug: \"biker\", image: \"/attached_assets/biker jersy kamio_1757362287518.jfif\" }\n  ];\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % heroImages.length);\n    }, 4000);\n    return () => clearInterval(timer);\n  }, [heroImages.length]);\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % heroImages.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + heroImages.length) % heroImages.length);\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section - Compact Mobile-Optimized */}\n      <section className=\"relative bg-white py-8 md:py-12 overflow-hidden\">\n        <div className=\"container mx-auto px-4 relative z-10\">\n          <div className=\"grid lg:grid-cols-2 gap-6 md:gap-8 items-center\">\n            {/* Left Content */}\n            <div className=\"order-2 lg:order-1 text-center lg:text-left\">\n              <div className=\"flex flex-wrap items-center justify-center lg:justify-start gap-2 mb-3\">\n                <Badge variant=\"outline\" className=\"border-primary text-primary bg-primary/10 text-xs\">\n                  <Award className=\"mr-1 h-3 w-3\" />\n                  CENTRAL INDIA'S BIGGEST PRINTING SERVICE\n                </Badge>\n              </div>\n              <h1 className=\"text-2xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-4 leading-tight\">\n                <span className=\"text-primary\">CUSTOM</span>{\" \"}\n                <span className=\"text-yellow-600\">JERSEYS</span>\n                <br className=\"hidden md:block\" />\n                <span className=\"text-gray-900\">& SPORTSWEAR</span>\n              </h1>\n              <p className=\"text-sm md:text-base text-gray-600 mb-6 max-w-lg mx-auto lg:mx-0\">\n                Professional jerseys for{\" \"}\n                <span className=\"font-semibold text-gray-900\">Cricket</span>,{\" \"}\n                <span className=\"font-semibold text-gray-900\">Football</span>,{\" \"}\n                <span className=\"font-semibold text-gray-900\">E-Sports</span>,{\" \"}\n                <span className=\"font-semibold text-gray-900\">Biker</span> & more\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-3 justify-center lg:justify-start\">\n                <Link href=\"/customize\">\n                  <Button size=\"default\" className=\"bg-primary hover:bg-primary/90 text-white px-6 py-3 text-sm md:text-base w-full sm:w-auto transform hover:scale-105 transition-all duration-300\">\n                    <Paintbrush2 className=\"mr-2 h-4 w-4\" />\n                    Start Customizing\n                  </Button>\n                </Link>\n              </div>\n            </div>\n            \n            {/* Right Content - Image Slider */}\n            <div className=\"order-1 lg:order-2 relative\">\n              <div className=\"relative max-w-sm mx-auto lg:max-w-full\">\n                <div className=\"aspect-square relative overflow-hidden rounded-lg shadow-2xl\">\n                  <img \n                    src={heroImages[currentSlide]} \n                    alt={`Custom KAMIO Jersey ${currentSlide + 1}`} \n                    className=\"w-full h-full object-cover transition-all duration-500\"\n                  />\n                  \n                  {/* Navigation Buttons */}\n                  <button \n                    onClick={prevSlide}\n                    className=\"absolute left-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full transition-all duration-300\"\n                    data-testid=\"button-prev-slide\"\n                  >\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </button>\n                  <button \n                    onClick={nextSlide}\n                    className=\"absolute right-2 top-1/2 -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full transition-all duration-300\"\n                    data-testid=\"button-next-slide\"\n                  >\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </button>\n                  \n                  {/* Slide Indicators */}\n                  <div className=\"absolute bottom-4 left-1/2 -translate-x-1/2 flex space-x-2\">\n                    {heroImages.map((_, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentSlide(index)}\n                        className={`w-2 h-2 rounded-full transition-all duration-300 ${\n                          currentSlide === index ? 'bg-primary' : 'bg-white/50'\n                        }`}\n                        data-testid={`indicator-slide-${index}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-slate-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {[\n              { icon: Award, title: \"CUSTOM MADE\", desc: \"Personalized designs\" },\n              { icon: Truck, title: \"FREE SHIPPING\", desc: \"On all orders\" },\n              { icon: Users, title: \"NO MINIMUM ORDER\", desc: \"Order as few as 1\" },\n              { icon: Paintbrush2, title: \"FREE CUSTOMIZATION\", desc: \"No extra charges\" }\n            ].map((feature, index) => (\n              <Card key={index} className=\"text-center border-none shadow-lg hover:shadow-xl transition-all duration-300 card-hover bg-white\">\n                <CardContent className=\"p-6\">\n                  <feature.icon className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-bold text-lg mb-2\">{feature.title}</h3>\n                  <p className=\"text-gray-600 text-sm\">{feature.desc}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Choose Your Sports Categories */}\n      <section className=\"py-12 md:py-16 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-8 md:mb-12\">\n            <h2 className=\"text-2xl md:text-3xl lg:text-4xl font-bold mb-4\">Choose Your Sports</h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto text-sm md:text-base\">\n              Professional jerseys for every sport. From cricket to esports, we've got you covered.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-6\">\n            {customCategories.map((category, index) => (\n              <Link key={category.id} href={`/category/${category.slug}`}>\n                <Card className=\"group cursor-pointer border-none shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden h-full\">\n                  <div className=\"aspect-[9/16] relative overflow-hidden\">\n                    <img \n                      src={category.image || `/api/placeholder/300/500`} \n                      alt={category.name}\n                      className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent group-hover:from-primary/60 transition-all duration-300\"></div>\n                    <div className=\"absolute bottom-3 left-3 text-white\">\n                      <h3 className=\"font-bold text-sm md:text-lg\">{category.name}</h3>\n                    </div>\n                  </div>\n                </Card>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Products with Animations */}\n      <section className=\"py-16 bg-slate-50\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Featured Products</h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto\">\n              Discover our most popular custom jerseys with stunning designs and premium quality.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {featuredProducts.map((product, index) => (\n              <Link key={product.id} href={`/product/${product.id}`}>\n                <Card className=\"group cursor-pointer border-none shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden product-card-animation\">\n                  <div className=\"aspect-[3/4] relative overflow-hidden\">\n                    <img \n                      src={product.image || `/api/placeholder/300/400`} \n                      alt={product.name}\n                      className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500 product-zoom\"\n                    />\n                    <div className=\"absolute top-4 left-4\">\n                      <Badge className=\"bg-red-500 text-white\">\n                        -{Math.round(((product.originalPrice || product.price) - product.price) / (product.originalPrice || product.price) * 100)}%\n                      </Badge>\n                    </div>\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-300\">\n                      <div className=\"absolute bottom-4 left-4 right-4 text-white\">\n                        <Button size=\"sm\" className=\"w-full bg-primary hover:bg-primary/90\">\n                          Quick View\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                  <CardContent className=\"p-4\">\n                    <h3 className=\"font-semibold text-lg mb-2 group-hover:text-primary transition-colors duration-300 line-clamp-2\">\n                      {product.name}\n                    </h3>\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      {product.originalPrice && (\n                        <span className=\"text-sm text-gray-500 line-through\">₹{product.originalPrice}</span>\n                      )}\n                      <span className=\"text-lg font-bold text-primary\">₹{product.price}</span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"w-4 h-4 fill-yellow-400 text-yellow-400\" />\n                      ))}\n                      <span className=\"text-sm text-gray-600 ml-1\">(4.8)</span>\n                    </div>\n                  </CardContent>\n                </Card>\n              </Link>\n            ))}\n          </div>\n          <div className=\"text-center mt-12\">\n            <Link href=\"/categories\">\n              <Button size=\"lg\" variant=\"outline\" className=\"px-8 py-6 text-lg group\">\n                View All Products\n                <ArrowRight className=\"ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Choose Us */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Why Choose Custom Jersey?</h2>\n          </div>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: Award,\n                title: \"Without Limits\",\n                desc: \"Change colors, add logos, names, numbers, all at no extra cost. You decide whether to buy one of our designs or create your own special design.\"\n              },\n              {\n                icon: Shield,\n                title: \"Quality\",\n                desc: \"Selected technical fabrics and models designed to offer you the best experience. Each process is entrusted to the best experts in the sector.\"\n              },\n              {\n                icon: Paintbrush2,\n                title: \"Design\",\n                desc: \"With our team of designers you can realize the most unique and special ideas. Tell us your idea, we will realize it for you, with you.\"\n              },\n              {\n                icon: Users,\n                title: \"Service\",\n                desc: \"We support you in every step, from creating the design to delivering your personalized uniforms. Our team is at your service.\"\n              },\n              {\n                icon: Clock,\n                title: \"Timing\",\n                desc: \"We are always working to reduce waiting times to a minimum. Remember that every order is made from scratch just for you.\"\n              },\n              {\n                icon: Star,\n                title: \"Made In India\",\n                desc: \"The production, creation and design processes are all managed in India and controlled solely by us to offer you the best service.\"\n              }\n            ].map((feature, index) => (\n              <Card key={index} className=\"text-center border-none shadow-lg hover:shadow-xl transition-all duration-300 card-hover\">\n                <CardContent className=\"p-8\">\n                  <feature.icon className=\"w-16 h-16 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-bold text-xl mb-4\">{feature.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed\">{feature.desc}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-gradient-to-r from-primary to-primary/80\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6\">\n            Ready to Create Your Custom Jersey?\n          </h2>\n          <p className=\"text-xl text-white/90 mb-8 max-w-2xl mx-auto\">\n            Join thousands of teams who trust us for their custom jersey needs. Start designing today!\n          </p>\n          <Link href=\"/customize\">\n            <Button size=\"lg\" className=\"bg-white text-primary hover:bg-white/90 px-12 py-6 text-xl font-semibold transform hover:scale-105 transition-all duration-300\">\n              Start Customizing Now\n            </Button>\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","size_bytes":16421},"client/src/pages/Login.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { login } from \"@/lib/auth\";\nimport { Link } from \"wouter\";\n\nconst loginSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\ntype LoginForm = z.infer<typeof loginSchema>;\n\nexport default function Login() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<LoginForm>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = async (data: LoginForm) => {\n    try {\n      setIsLoading(true);\n      await login(data.email, data.password);\n      \n      toast({\n        title: \"Login successful\",\n        description: \"Welcome back to KAMIO!\",\n      });\n      \n      navigate(\"/\");\n    } catch (error: any) {\n      toast({\n        title: \"Login failed\",\n        description: error.message || \"Please check your credentials and try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-muted/30 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold text-primary\" data-testid=\"text-login-title\">\n            Welcome Back\n          </CardTitle>\n          <CardDescription data-testid=\"text-login-description\">\n            Sign in to your KAMIO account\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"email\"\n                        placeholder=\"Enter your email\"\n                        disabled={isLoading}\n                        data-testid=\"input-email\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        disabled={isLoading}\n                        data-testid=\"input-password\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isLoading}\n                data-testid=\"button-submit\"\n              >\n                {isLoading ? \"Signing in...\" : \"Sign In\"}\n              </Button>\n            </form>\n          </Form>\n          \n          <div className=\"mt-6 text-center text-sm\">\n            <p className=\"text-muted-foreground\">\n              Don't have an account?{\" \"}\n              <Link href=\"/signup\" className=\"text-primary hover:underline\" data-testid=\"link-signup\">\n                Sign up\n              </Link>\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":4333},"client/src/pages/Product.tsx":{"content":"import { useState } from \"react\";\nimport { useParams, useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Product } from \"@shared/schema\";\nimport { isAuthenticated, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { ShoppingCart, Heart, Star, ArrowLeft } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function ProductPage() {\n  const params = useParams();\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n  \n  const [selectedImage, setSelectedImage] = useState(0);\n  const [selectedSize, setSelectedSize] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n\n  const { data: product, isLoading } = useQuery<Product>({\n    queryKey: [\"/api/products\", params.id],\n  });\n\n  const addToCartMutation = useMutation({\n    mutationFn: async () => {\n      if (!authenticated) {\n        throw new Error(\"Please login to add items to cart\");\n      }\n      \n      if (!selectedSize || !selectedColor) {\n        throw new Error(\"Please select size and color\");\n      }\n      \n      const options = createAuthenticatedRequest(\"/api/cart\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          productId: product?.id,\n          quantity,\n          size: selectedSize,\n          color: selectedColor,\n        }),\n      });\n      \n      const response = await fetch(\"/api/cart\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to add to cart\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/cart\"] });\n      toast({\n        title: \"Added to cart\",\n        description: `${product?.name} has been added to your cart.`,\n      });\n    },\n    onError: (error: Error) => {\n      if (error.message.includes(\"login\")) {\n        navigate(\"/login\");\n      } else {\n        toast({\n          title: \"Error\",\n          description: error.message,\n          variant: \"destructive\",\n        });\n      }\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-96 rounded-xl\" />\n              <div className=\"flex space-x-2\">\n                {[...Array(4)].map((_, i) => (\n                  <Skeleton key={i} className=\"w-20 h-20 rounded-lg\" />\n                ))}\n              </div>\n            </div>\n            <div className=\"space-y-6\">\n              <Skeleton className=\"h-8 w-3/4\" />\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-6 w-1/4\" />\n              <Skeleton className=\"h-32 w-full\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!product) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-product-not-found\">\n            Product not found\n          </h1>\n          <Button onClick={() => navigate(\"/categories\")} data-testid=\"button-back-to-categories\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Categories\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const hasDiscount = product.originalPrice && parseFloat(product.originalPrice) > parseFloat(product.price);\n  const images = product.images && product.images.length > 0 \n    ? product.images \n    : [\"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=600\"];\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        {/* Breadcrumb */}\n        <div className=\"mb-8\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate(\"/categories\")}\n            className=\"mb-4\"\n            data-testid=\"button-back\"\n          >\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Categories\n          </Button>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-12\">\n          {/* Product Images */}\n          <div>\n            <div className=\"mb-4\">\n              <img\n                src={images[selectedImage]}\n                alt={product.name}\n                className=\"w-full h-96 object-cover rounded-xl\"\n                data-testid=\"img-product-main\"\n              />\n            </div>\n            \n            {images.length > 1 && (\n              <div className=\"flex space-x-2 overflow-x-auto\">\n                {images.map((image, index) => (\n                  <img\n                    key={index}\n                    src={image}\n                    alt={`${product.name} ${index + 1}`}\n                    className={`w-20 h-20 object-cover rounded-lg cursor-pointer border-2 ${\n                      selectedImage === index ? \"border-primary\" : \"border-transparent\"\n                    }`}\n                    onClick={() => setSelectedImage(index)}\n                    data-testid={`img-product-thumb-${index}`}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Product Details */}\n          <div>\n            <div className=\"mb-6\">\n              <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-product-name\">\n                {product.name}\n              </h1>\n              \n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"flex items-center\">\n                  <Star className=\"h-5 w-5 text-yellow-500 mr-1\" />\n                  <span className=\"text-lg\" data-testid=\"text-product-rating\">\n                    {product.rating || \"4.5\"}\n                  </span>\n                  <span className=\"text-muted-foreground ml-2\">(24 reviews)</span>\n                </div>\n                \n                {hasDiscount && (\n                  <Badge className=\"bg-primary text-primary-foreground\" data-testid=\"badge-sale\">\n                    Sale\n                  </Badge>\n                )}\n              </div>\n              \n              <div className=\"flex items-center space-x-3 mb-6\">\n                <span className=\"text-3xl font-bold text-primary\" data-testid=\"text-product-price\">\n                  ₹{product.price}\n                </span>\n                {hasDiscount && (\n                  <span className=\"text-xl text-muted-foreground line-through\" data-testid=\"text-product-original-price\">\n                    ₹{product.originalPrice}\n                  </span>\n                )}\n              </div>\n            </div>\n\n            <div className=\"mb-6\">\n              <p className=\"text-muted-foreground text-lg\" data-testid=\"text-product-description\">\n                {product.description}\n              </p>\n            </div>\n\n            {/* Product Options */}\n            <Card className=\"mb-6\">\n              <CardContent className=\"p-6\">\n                <div className=\"space-y-4\">\n                  {/* Size Selection */}\n                  {product.sizes && product.sizes.length > 0 && (\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">Size</label>\n                      <Select value={selectedSize} onValueChange={setSelectedSize}>\n                        <SelectTrigger data-testid=\"select-size\">\n                          <SelectValue placeholder=\"Select size\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {product.sizes.map((size) => (\n                            <SelectItem key={size} value={size} data-testid={`option-size-${size}`}>\n                              {size}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n\n                  {/* Color Selection */}\n                  {product.colors && product.colors.length > 0 && (\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">Color</label>\n                      <Select value={selectedColor} onValueChange={setSelectedColor}>\n                        <SelectTrigger data-testid=\"select-color\">\n                          <SelectValue placeholder=\"Select color\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {product.colors.map((color) => (\n                            <SelectItem key={color} value={color} data-testid={`option-color-${color}`}>\n                              {color}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n\n                  {/* Quantity */}\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">Quantity</label>\n                    <Select value={quantity.toString()} onValueChange={(value) => setQuantity(parseInt(value))}>\n                      <SelectTrigger data-testid=\"select-quantity\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {[...Array(10)].map((_, i) => (\n                          <SelectItem key={i + 1} value={(i + 1).toString()} data-testid={`option-quantity-${i + 1}`}>\n                            {i + 1}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Action Buttons */}\n            <div className=\"flex space-x-4\">\n              <Button\n                onClick={() => addToCartMutation.mutate()}\n                disabled={addToCartMutation.isPending || (!selectedSize && product.sizes?.length) || (!selectedColor && product.colors?.length)}\n                className=\"flex-1\"\n                data-testid=\"button-add-to-cart\"\n              >\n                <ShoppingCart className=\"mr-2 h-4 w-4\" />\n                {addToCartMutation.isPending ? \"Adding...\" : \"Add to Cart\"}\n              </Button>\n              \n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                data-testid=\"button-wishlist\"\n              >\n                <Heart className=\"h-4 w-4\" />\n              </Button>\n            </div>\n\n            {/* Product Info */}\n            <div className=\"mt-8 space-y-4 text-sm text-muted-foreground\">\n              <div className=\"flex justify-between\">\n                <span>SKU:</span>\n                <span data-testid=\"text-product-sku\">{product.id.slice(0, 8).toUpperCase()}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Availability:</span>\n                <span className={product.inventory && product.inventory > 0 ? \"text-green-600\" : \"text-red-600\"} data-testid=\"text-product-availability\">\n                  {product.inventory && product.inventory > 0 ? \"In Stock\" : \"Out of Stock\"}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Category:</span>\n                <span data-testid=\"text-product-category\">Custom Apparel</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12160},"client/src/pages/Profile.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { isAuthenticated, getCurrentUser, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { useLocation } from \"wouter\";\nimport { User, Package, Clock, CheckCircle, XCircle } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface Order {\n  id: string;\n  status: string;\n  total: string;\n  items: Array<{\n    productId: string;\n    quantity: number;\n    name: string;\n    price: string;\n    size?: string;\n    color?: string;\n  }>;\n  shippingAddress: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    address: string;\n    city: string;\n    state: string;\n    pincode: string;\n    country: string;\n  };\n  paymentStatus: string;\n  createdAt: string;\n}\n\nconst statusColors = {\n  pending: \"bg-yellow-500\",\n  packed: \"bg-blue-500\",\n  dispatched: \"bg-purple-500\",\n  shipped: \"bg-indigo-500\",\n  delivered: \"bg-green-500\",\n  cancelled: \"bg-red-500\",\n};\n\nconst statusIcons = {\n  pending: Clock,\n  packed: Package,\n  dispatched: Package,\n  shipped: Package,\n  delivered: CheckCircle,\n  cancelled: XCircle,\n};\n\nexport default function Profile() {\n  const [, navigate] = useLocation();\n  const authenticated = isAuthenticated();\n  const user = getCurrentUser();\n\n  const { data: orders = [], isLoading } = useQuery<Order[]>({\n    queryKey: [\"/api/orders\"],\n    enabled: authenticated,\n    queryFn: async () => {\n      const response = await fetch(\"/api/orders\", createAuthenticatedRequest(\"/api/orders\"));\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch orders\");\n      }\n      return response.json();\n    },\n  });\n\n  if (!authenticated) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-login-required\">\n            Please login to view your profile\n          </h1>\n          <Button onClick={() => navigate(\"/login\")} data-testid=\"button-login\">\n            Login\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString(\"en-IN\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  };\n\n  const getStatusColor = (status: string) => {\n    return statusColors[status as keyof typeof statusColors] || \"bg-gray-500\";\n  };\n\n  const getStatusIcon = (status: string) => {\n    const Icon = statusIcons[status as keyof typeof statusIcons] || Clock;\n    return Icon;\n  };\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-profile-title\">\n            My Account\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Manage your profile and view order history\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"profile\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"profile\" data-testid=\"tab-profile\">\n              <User className=\"mr-2 h-4 w-4\" />\n              Profile\n            </TabsTrigger>\n            <TabsTrigger value=\"orders\" data-testid=\"tab-orders\">\n              <Package className=\"mr-2 h-4 w-4\" />\n              Orders\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"profile\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Profile Information</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-muted-foreground\">Name</label>\n                    <p className=\"text-foreground font-medium\" data-testid=\"text-user-name\">\n                      {user?.name}\n                    </p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-muted-foreground\">Email</label>\n                    <p className=\"text-foreground font-medium\" data-testid=\"text-user-email\">\n                      {user?.email}\n                    </p>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-muted-foreground\">Role</label>\n                  <div className=\"mt-1\">\n                    <Badge variant={user?.role === \"admin\" ? \"default\" : \"secondary\"} data-testid=\"badge-user-role\">\n                      {user?.role === \"admin\" ? \"Administrator\" : \"Customer\"}\n                    </Badge>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"orders\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Order History</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {isLoading ? (\n                  <div className=\"space-y-4\">\n                    {[...Array(3)].map((_, i) => (\n                      <div key={i} className=\"space-y-2\">\n                        <Skeleton className=\"h-4 w-1/4\" />\n                        <Skeleton className=\"h-20 w-full\" />\n                      </div>\n                    ))}\n                  </div>\n                ) : orders.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <Package className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold mb-2\" data-testid=\"text-no-orders\">\n                      No orders yet\n                    </h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Start shopping to see your orders here\n                    </p>\n                    <Button onClick={() => navigate(\"/categories\")} data-testid=\"button-start-shopping\">\n                      Start Shopping\n                    </Button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {orders.map((order) => {\n                      const StatusIcon = getStatusIcon(order.status);\n                      return (\n                        <Card key={order.id} data-testid={`order-card-${order.id}`}>\n                          <CardContent className=\"p-6\">\n                            <div className=\"flex items-center justify-between mb-4\">\n                              <div>\n                                <h3 className=\"font-semibold\" data-testid={`text-order-id-${order.id}`}>\n                                  Order #{order.id.slice(0, 8).toUpperCase()}\n                                </h3>\n                                <p className=\"text-sm text-muted-foreground\" data-testid={`text-order-date-${order.id}`}>\n                                  {formatDate(order.createdAt)}\n                                </p>\n                              </div>\n                              <div className=\"text-right\">\n                                <div className=\"flex items-center mb-1\">\n                                  <div className={`w-2 h-2 rounded-full mr-2 ${getStatusColor(order.status)}`} />\n                                  <StatusIcon className=\"h-4 w-4 mr-1\" />\n                                  <Badge variant=\"secondary\" data-testid={`badge-order-status-${order.id}`}>\n                                    {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                                  </Badge>\n                                </div>\n                                <p className=\"text-lg font-bold text-primary\" data-testid={`text-order-total-${order.id}`}>\n                                  ₹{parseFloat(order.total).toFixed(2)}\n                                </p>\n                              </div>\n                            </div>\n                            \n                            <div className=\"space-y-2\">\n                              <h4 className=\"font-medium\">Items:</h4>\n                              {order.items.map((item, index) => (\n                                <div key={index} className=\"flex justify-between text-sm\" data-testid={`order-item-${order.id}-${index}`}>\n                                  <span>\n                                    {item.name} {item.size && `(Size: ${item.size})`} {item.color && `(Color: ${item.color})`}\n                                  </span>\n                                  <span>\n                                    {item.quantity}x ₹{parseFloat(item.price).toFixed(2)}\n                                  </span>\n                                </div>\n                              ))}\n                            </div>\n                            \n                            <div className=\"mt-4 pt-4 border-t\">\n                              <div className=\"text-sm text-muted-foreground\">\n                                <p><strong>Shipping Address:</strong></p>\n                                <p data-testid={`text-shipping-address-${order.id}`}>\n                                  {order.shippingAddress.firstName} {order.shippingAddress.lastName}<br />\n                                  {order.shippingAddress.address}<br />\n                                  {order.shippingAddress.city}, {order.shippingAddress.state} {order.shippingAddress.pincode}\n                                </p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      );\n                    })}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10120},"client/src/pages/Signup.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { signup } from \"@/lib/auth\";\nimport { Link } from \"wouter\";\n\nconst signupSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string(),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\ntype SignupForm = z.infer<typeof signupSchema>;\n\nexport default function Signup() {\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<SignupForm>({\n    resolver: zodResolver(signupSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  const onSubmit = async (data: SignupForm) => {\n    try {\n      setIsLoading(true);\n      await signup(data.email, data.password, data.name);\n      \n      toast({\n        title: \"Account created\",\n        description: \"Welcome to KAMIO! Your account has been created successfully.\",\n      });\n      \n      navigate(\"/\");\n    } catch (error: any) {\n      toast({\n        title: \"Signup failed\",\n        description: error.message || \"Something went wrong. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-muted/30 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold text-primary\" data-testid=\"text-signup-title\">\n            Create Account\n          </CardTitle>\n          <CardDescription data-testid=\"text-signup-description\">\n            Join KAMIO and start customizing your lifestyle\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Full Name</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        placeholder=\"Enter your full name\"\n                        disabled={isLoading}\n                        data-testid=\"input-name\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"email\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Email</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"email\"\n                        placeholder=\"Enter your email\"\n                        disabled={isLoading}\n                        data-testid=\"input-email\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"password\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Password</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"password\"\n                        placeholder=\"Create a password\"\n                        disabled={isLoading}\n                        data-testid=\"input-password\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <FormField\n                control={form.control}\n                name=\"confirmPassword\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Confirm Password</FormLabel>\n                    <FormControl>\n                      <Input\n                        {...field}\n                        type=\"password\"\n                        placeholder=\"Confirm your password\"\n                        disabled={isLoading}\n                        data-testid=\"input-confirm-password\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isLoading}\n                data-testid=\"button-submit\"\n              >\n                {isLoading ? \"Creating account...\" : \"Create Account\"}\n              </Button>\n            </form>\n          </Form>\n          \n          <div className=\"mt-6 text-center text-sm\">\n            <p className=\"text-muted-foreground\">\n              Already have an account?{\" \"}\n              <Link href=\"/login\" className=\"text-primary hover:underline\" data-testid=\"link-login\">\n                Sign in\n              </Link>\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":6043},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/admin/Dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { isAuthenticated, isAdmin, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { useLocation } from \"wouter\";\nimport { Package, ShoppingCart, Users, TrendingUp, Clock, CheckCircle } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\n\ninterface DashboardStats {\n  totalProducts: number;\n  totalOrders: number;\n  totalUsers: number;\n  totalRevenue: number;\n  pendingOrders: number;\n  completedOrders: number;\n}\n\ninterface Order {\n  id: string;\n  status: string;\n  total: string;\n  createdAt: string;\n  userId: string;\n}\n\ninterface Product {\n  id: string;\n  name: string;\n  price: string;\n  inventory: number;\n  isActive: boolean;\n}\n\nexport default function AdminDashboard() {\n  const [, navigate] = useLocation();\n  const authenticated = isAuthenticated();\n  const isAdminUser = isAdmin();\n\n  const { data: orders = [], isLoading: ordersLoading } = useQuery<Order[]>({\n    queryKey: [\"/api/admin/orders\"],\n    enabled: authenticated && isAdminUser,\n    queryFn: async () => {\n      const response = await fetch(\"/api/admin/orders\", createAuthenticatedRequest(\"/api/admin/orders\"));\n      if (!response.ok) throw new Error(\"Failed to fetch orders\");\n      return response.json();\n    },\n  });\n\n  const { data: products = [], isLoading: productsLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\"],\n    enabled: authenticated && isAdminUser,\n  });\n\n  if (!authenticated || !isAdminUser) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto p-6\">\n          <div className=\"mb-6\">\n            <div className=\"w-16 h-16 bg-destructive/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Users className=\"h-8 w-8 text-destructive\" />\n            </div>\n            <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-access-denied\">\n              Access Denied\n            </h1>\n            <p className=\"text-muted-foreground mb-6\">\n              {!authenticated \n                ? \"Please log in to access the admin dashboard.\"\n                : \"You don't have permission to access the admin dashboard. Please contact an administrator.\"\n              }\n            </p>\n          </div>\n          <div className=\"space-y-3\">\n            {!authenticated ? (\n              <button\n                onClick={() => navigate(\"/login\")}\n                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 rounded-md font-medium transition-colors\"\n                data-testid=\"button-login-admin\"\n              >\n                Go to Login\n              </button>\n            ) : (\n              <button\n                onClick={() => navigate(\"/\")}\n                className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 rounded-md font-medium transition-colors\"\n                data-testid=\"button-home-admin\"\n              >\n                Back to Home\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const stats: DashboardStats = {\n    totalProducts: products.length,\n    totalOrders: orders.length,\n    totalUsers: 0, // Would need a separate API endpoint for user count\n    totalRevenue: orders.reduce((sum, order) => sum + parseFloat(order.total), 0),\n    pendingOrders: orders.filter(order => order.status === 'pending').length,\n    completedOrders: orders.filter(order => order.status === 'delivered').length,\n  };\n\n  const recentOrders = orders.slice(0, 5);\n  const lowStockProducts = products.filter(product => (product.inventory || 0) < 10);\n\n  if (ordersLoading || productsLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {[...Array(4)].map((_, i) => (\n              <Skeleton key={i} className=\"h-32 rounded-xl\" />\n            ))}\n          </div>\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            <Skeleton className=\"h-96 rounded-xl\" />\n            <Skeleton className=\"h-96 rounded-xl\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-dashboard-title\">\n            Admin Dashboard\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Overview of your KAMIO store performance\n          </p>\n        </div>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card data-testid=\"card-total-products\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Products</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-total-products\">\n                    {stats.totalProducts}\n                  </p>\n                </div>\n                <Package className=\"h-8 w-8 text-primary\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card data-testid=\"card-total-orders\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Orders</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-total-orders\">\n                    {stats.totalOrders}\n                  </p>\n                </div>\n                <ShoppingCart className=\"h-8 w-8 text-primary\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card data-testid=\"card-total-revenue\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Total Revenue</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-total-revenue\">\n                    ₹{stats.totalRevenue.toFixed(2)}\n                  </p>\n                </div>\n                <TrendingUp className=\"h-8 w-8 text-primary\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card data-testid=\"card-pending-orders\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-muted-foreground\">Pending Orders</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-pending-orders\">\n                    {stats.pendingOrders}\n                  </p>\n                </div>\n                <Clock className=\"h-8 w-8 text-primary\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Recent Orders */}\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Recent Orders</CardTitle>\n              <Link href=\"/admin/orders\">\n                <Badge variant=\"outline\" className=\"cursor-pointer hover:bg-muted\" data-testid=\"link-view-all-orders\">\n                  View All\n                </Badge>\n              </Link>\n            </CardHeader>\n            <CardContent>\n              {recentOrders.length === 0 ? (\n                <p className=\"text-center text-muted-foreground py-4\" data-testid=\"text-no-orders\">\n                  No orders yet\n                </p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {recentOrders.map((order) => (\n                    <div\n                      key={order.id}\n                      className=\"flex items-center justify-between p-3 rounded-lg border\"\n                      data-testid={`recent-order-${order.id}`}\n                    >\n                      <div>\n                        <p className=\"font-medium\" data-testid={`text-order-id-${order.id}`}>\n                          #{order.id.slice(0, 8).toUpperCase()}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\" data-testid={`text-order-date-${order.id}`}>\n                          {new Date(order.createdAt).toLocaleDateString()}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"font-bold text-primary\" data-testid={`text-order-total-${order.id}`}>\n                          ₹{parseFloat(order.total).toFixed(2)}\n                        </p>\n                        <Badge\n                          variant={order.status === 'delivered' ? 'default' : 'secondary'}\n                          data-testid={`badge-order-status-${order.id}`}\n                        >\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Low Stock Products */}\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Low Stock Alert</CardTitle>\n              <Link href=\"/admin/products\">\n                <Badge variant=\"outline\" className=\"cursor-pointer hover:bg-muted\" data-testid=\"link-manage-products\">\n                  Manage Products\n                </Badge>\n              </Link>\n            </CardHeader>\n            <CardContent>\n              {lowStockProducts.length === 0 ? (\n                <div className=\"text-center py-4\">\n                  <CheckCircle className=\"h-8 w-8 text-green-500 mx-auto mb-2\" />\n                  <p className=\"text-muted-foreground\" data-testid=\"text-no-low-stock\">\n                    All products are well stocked\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {lowStockProducts.map((product) => (\n                    <div\n                      key={product.id}\n                      className=\"flex items-center justify-between p-3 rounded-lg border\"\n                      data-testid={`low-stock-product-${product.id}`}\n                    >\n                      <div>\n                        <p className=\"font-medium\" data-testid={`text-product-name-${product.id}`}>\n                          {product.name}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          ₹{product.price}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <Badge\n                          variant=\"destructive\"\n                          data-testid={`badge-stock-${product.id}`}\n                        >\n                          {product.inventory || 0} left\n                        </Badge>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":11740},"client/src/pages/admin/Orders.tsx":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated, isAdmin, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { Package, Clock, CheckCircle, XCircle, Truck } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface Order {\n  id: string;\n  status: string;\n  total: string;\n  items: Array<{\n    productId: string;\n    quantity: number;\n    name: string;\n    price: string;\n    size?: string;\n    color?: string;\n  }>;\n  shippingAddress: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    address: string;\n    city: string;\n    state: string;\n    pincode: string;\n    country: string;\n  };\n  paymentStatus: string;\n  createdAt: string;\n  userId: string;\n}\n\nconst statusColors = {\n  pending: \"bg-yellow-500\",\n  packed: \"bg-blue-500\",\n  dispatched: \"bg-purple-500\",\n  shipped: \"bg-indigo-500\",\n  delivered: \"bg-green-500\",\n  cancelled: \"bg-red-500\",\n};\n\nconst statusIcons = {\n  pending: Clock,\n  packed: Package,\n  dispatched: Package,\n  shipped: Truck,\n  delivered: CheckCircle,\n  cancelled: XCircle,\n};\n\nconst statusOptions = [\n  { value: \"pending\", label: \"Pending\" },\n  { value: \"packed\", label: \"Packed\" },\n  { value: \"dispatched\", label: \"Dispatched\" },\n  { value: \"shipped\", label: \"Shipped\" },\n  { value: \"delivered\", label: \"Delivered\" },\n  { value: \"cancelled\", label: \"Cancelled\" },\n];\n\nexport default function AdminOrders() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n  const isAdminUser = isAdmin();\n\n  const { data: orders = [], isLoading } = useQuery<Order[]>({\n    queryKey: [\"/api/admin/orders\"],\n    enabled: authenticated && isAdminUser,\n    queryFn: async () => {\n      const response = await fetch(\"/api/admin/orders\", createAuthenticatedRequest(\"/api/admin/orders\"));\n      if (!response.ok) throw new Error(\"Failed to fetch orders\");\n      return response.json();\n    },\n  });\n\n  const updateOrderStatusMutation = useMutation({\n    mutationFn: async ({ orderId, status }: { orderId: string; status: string }) => {\n      const options = createAuthenticatedRequest(`/api/admin/orders/${orderId}/status`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ status }),\n      });\n      \n      const response = await fetch(`/api/admin/orders/${orderId}/status`, options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to update order status\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/orders\"] });\n      toast({ title: \"Order status updated successfully\" });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!authenticated || !isAdminUser) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-access-denied\">\n            Access Denied\n          </h1>\n          <p className=\"text-muted-foreground mb-4\">\n            You don't have permission to manage orders.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString(\"en-IN\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  const getStatusColor = (status: string) => {\n    return statusColors[status as keyof typeof statusColors] || \"bg-gray-500\";\n  };\n\n  const getStatusIcon = (status: string) => {\n    const Icon = statusIcons[status as keyof typeof statusIcons] || Clock;\n    return Icon;\n  };\n\n  const handleStatusUpdate = (orderId: string, newStatus: string) => {\n    updateOrderStatusMutation.mutate({ orderId, status: newStatus });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"space-y-4\">\n            {[...Array(5)].map((_, i) => (\n              <Skeleton key={i} className=\"h-64 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-orders-title\">\n            Order Management\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Manage and track all customer orders\n          </p>\n        </div>\n\n        {orders.length === 0 ? (\n          <div className=\"text-center py-16\">\n            <Package className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\" data-testid=\"text-no-orders\">\n              No orders yet\n            </h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Orders will appear here once customers start purchasing\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {orders.map((order) => {\n              const StatusIcon = getStatusIcon(order.status);\n              return (\n                <Card key={order.id} data-testid={`order-card-${order.id}`}>\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`w-3 h-3 rounded-full ${getStatusColor(order.status)}`} />\n                        <StatusIcon className=\"h-5 w-5\" />\n                        <CardTitle data-testid={`text-order-id-${order.id}`}>\n                          Order #{order.id.slice(0, 8).toUpperCase()}\n                        </CardTitle>\n                      </div>\n                      <div className=\"flex items-center space-x-4\">\n                        <span className=\"text-sm text-muted-foreground\" data-testid={`text-order-date-${order.id}`}>\n                          {formatDate(order.createdAt)}\n                        </span>\n                        <Select\n                          value={order.status}\n                          onValueChange={(newStatus) => handleStatusUpdate(order.id, newStatus)}\n                          disabled={updateOrderStatusMutation.isPending}\n                        >\n                          <SelectTrigger className=\"w-40\" data-testid={`select-order-status-${order.id}`}>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {statusOptions.map((option) => (\n                              <SelectItem key={option.value} value={option.value}>\n                                {option.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  \n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      {/* Order Items */}\n                      <div>\n                        <h4 className=\"font-semibold mb-3\">Order Items</h4>\n                        <div className=\"space-y-2\">\n                          {order.items.map((item, index) => (\n                            <div\n                              key={index}\n                              className=\"flex justify-between items-center p-3 bg-muted/30 rounded-lg\"\n                              data-testid={`order-item-${order.id}-${index}`}\n                            >\n                              <div>\n                                <p className=\"font-medium\" data-testid={`text-item-name-${order.id}-${index}`}>\n                                  {item.name}\n                                </p>\n                                <div className=\"flex space-x-2 mt-1\">\n                                  {item.size && (\n                                    <Badge variant=\"secondary\" size=\"sm\">\n                                      Size: {item.size}\n                                    </Badge>\n                                  )}\n                                  {item.color && (\n                                    <Badge variant=\"secondary\" size=\"sm\">\n                                      Color: {item.color}\n                                    </Badge>\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <p className=\"font-medium\" data-testid={`text-item-total-${order.id}-${index}`}>\n                                  ₹{(parseFloat(item.price) * item.quantity).toFixed(2)}\n                                </p>\n                                <p className=\"text-sm text-muted-foreground\">\n                                  {item.quantity}x ₹{parseFloat(item.price).toFixed(2)}\n                                </p>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n\n                      {/* Shipping Information */}\n                      <div>\n                        <h4 className=\"font-semibold mb-3\">Shipping Information</h4>\n                        <div className=\"space-y-2 text-sm\" data-testid={`shipping-info-${order.id}`}>\n                          <p>\n                            <strong>Name:</strong> {order.shippingAddress.firstName} {order.shippingAddress.lastName}\n                          </p>\n                          <p>\n                            <strong>Email:</strong> {order.shippingAddress.email}\n                          </p>\n                          <p>\n                            <strong>Phone:</strong> {order.shippingAddress.phone}\n                          </p>\n                          <p>\n                            <strong>Address:</strong> {order.shippingAddress.address}\n                          </p>\n                          <p>\n                            <strong>City:</strong> {order.shippingAddress.city}, {order.shippingAddress.state} {order.shippingAddress.pincode}\n                          </p>\n                          <p>\n                            <strong>Country:</strong> {order.shippingAddress.country}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Order Summary */}\n                    <div className=\"flex items-center justify-between pt-4 border-t\">\n                      <div className=\"flex items-center space-x-4\">\n                        <Badge\n                          variant={order.paymentStatus === 'paid' ? 'default' : 'secondary'}\n                          data-testid={`badge-payment-status-${order.id}`}\n                        >\n                          Payment: {order.paymentStatus.charAt(0).toUpperCase() + order.paymentStatus.slice(1)}\n                        </Badge>\n                        <Badge\n                          variant=\"outline\"\n                          className={`${getStatusColor(order.status)} text-white`}\n                          data-testid={`badge-order-status-${order.id}`}\n                        >\n                          {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                        </Badge>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-2xl font-bold text-primary\" data-testid={`text-order-total-${order.id}`}>\n                          ₹{parseFloat(order.total).toFixed(2)}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {order.items.length} {order.items.length === 1 ? 'item' : 'items'}\n                        </p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":12812},"client/src/pages/admin/Products.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isAuthenticated, isAdmin, createAuthenticatedRequest } from \"@/lib/auth\";\nimport { Plus, Edit, Trash2, Package } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Product, Category } from \"@shared/schema\";\n\nconst productSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  slug: z.string().min(2, \"Slug must be at least 2 characters\"),\n  description: z.string().min(10, \"Description must be at least 10 characters\"),\n  price: z.string().min(1, \"Price is required\"),\n  originalPrice: z.string().optional(),\n  categoryId: z.string().min(1, \"Category is required\"),\n  images: z.array(z.string()).optional(),\n  sizes: z.array(z.string()).optional(),\n  colors: z.array(z.string()).optional(),\n  inventory: z.number().min(0, \"Inventory must be 0 or greater\"),\n});\n\ntype ProductForm = z.infer<typeof productSchema>;\n\nexport default function AdminProducts() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const authenticated = isAuthenticated();\n  const isAdminUser = isAdmin();\n  \n  const [isCreateOpen, setIsCreateOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState<Product | null>(null);\n\n  const { data: products = [], isLoading: productsLoading } = useQuery<Product[]>({\n    queryKey: [\"/api/products\"],\n    enabled: authenticated && isAdminUser,\n  });\n\n  const { data: categories = [] } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n    enabled: authenticated && isAdminUser,\n  });\n\n  const form = useForm<ProductForm>({\n    resolver: zodResolver(productSchema),\n    defaultValues: {\n      name: \"\",\n      slug: \"\",\n      description: \"\",\n      price: \"\",\n      originalPrice: \"\",\n      categoryId: \"\",\n      images: [],\n      sizes: [],\n      colors: [],\n      inventory: 0,\n    },\n  });\n\n  const createProductMutation = useMutation({\n    mutationFn: async (productData: ProductForm) => {\n      const options = createAuthenticatedRequest(\"/api/products\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...productData,\n          images: productData.images?.filter(img => img.trim()) || [],\n          sizes: productData.sizes?.filter(size => size.trim()) || [],\n          colors: productData.colors?.filter(color => color.trim()) || [],\n        }),\n      });\n      \n      const response = await fetch(\"/api/products\", options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to create product\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({ title: \"Product created successfully\" });\n      setIsCreateOpen(false);\n      form.reset();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateProductMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: ProductForm }) => {\n      const options = createAuthenticatedRequest(`/api/products/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ...data,\n          images: data.images?.filter(img => img.trim()) || [],\n          sizes: data.sizes?.filter(size => size.trim()) || [],\n          colors: data.colors?.filter(color => color.trim()) || [],\n        }),\n      });\n      \n      const response = await fetch(`/api/products/${id}`, options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to update product\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({ title: \"Product updated successfully\" });\n      setEditingProduct(null);\n      form.reset();\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteProductMutation = useMutation({\n    mutationFn: async (id: string) => {\n      const options = createAuthenticatedRequest(`/api/products/${id}`, {\n        method: \"DELETE\",\n      });\n      \n      const response = await fetch(`/api/products/${id}`, options);\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || \"Failed to delete product\");\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/products\"] });\n      toast({ title: \"Product deleted successfully\" });\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = async (data: ProductForm) => {\n    if (editingProduct) {\n      updateProductMutation.mutate({ id: editingProduct.id, data });\n    } else {\n      createProductMutation.mutate(data);\n    }\n  };\n\n  const handleEdit = (product: Product) => {\n    setEditingProduct(product);\n    form.reset({\n      name: product.name,\n      slug: product.slug,\n      description: product.description || \"\",\n      price: product.price,\n      originalPrice: product.originalPrice || \"\",\n      categoryId: product.categoryId || \"\",\n      images: product.images || [],\n      sizes: product.sizes || [],\n      colors: product.colors || [],\n      inventory: product.inventory || 0,\n    });\n  };\n\n  const handleDelete = async (productId: string) => {\n    if (confirm(\"Are you sure you want to delete this product?\")) {\n      deleteProductMutation.mutate(productId);\n    }\n  };\n\n  if (!authenticated || !isAdminUser) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\" data-testid=\"text-access-denied\">\n            Access Denied\n          </h1>\n          <p className=\"text-muted-foreground mb-4\">\n            You don't have permission to manage products.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (productsLoading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {[...Array(6)].map((_, i) => (\n              <Skeleton key={i} className=\"h-64 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-foreground mb-2\" data-testid=\"text-products-title\">\n              Product Management\n            </h1>\n            <p className=\"text-muted-foreground\">\n              Manage your product catalog\n            </p>\n          </div>\n          <Dialog open={isCreateOpen} onOpenChange={setIsCreateOpen}>\n            <DialogTrigger asChild>\n              <Button data-testid=\"button-add-product\">\n                <Plus className=\"mr-2 h-4 w-4\" />\n                Add Product\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle>\n                  {editingProduct ? \"Edit Product\" : \"Add New Product\"}\n                </DialogTitle>\n              </DialogHeader>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Name</FormLabel>\n                          <FormControl>\n                            <Input {...field} data-testid=\"input-product-name\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"slug\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Slug</FormLabel>\n                          <FormControl>\n                            <Input {...field} data-testid=\"input-product-slug\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Description</FormLabel>\n                        <FormControl>\n                          <Textarea {...field} data-testid=\"input-product-description\" />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"price\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Price</FormLabel>\n                          <FormControl>\n                            <Input {...field} type=\"number\" step=\"0.01\" data-testid=\"input-product-price\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"originalPrice\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Original Price</FormLabel>\n                          <FormControl>\n                            <Input {...field} type=\"number\" step=\"0.01\" data-testid=\"input-product-original-price\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"inventory\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Inventory</FormLabel>\n                          <FormControl>\n                            <Input\n                              {...field}\n                              type=\"number\"\n                              onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                              data-testid=\"input-product-inventory\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <FormField\n                    control={form.control}\n                    name=\"categoryId\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Category</FormLabel>\n                        <Select onValueChange={field.onChange} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger data-testid=\"select-product-category\">\n                              <SelectValue placeholder=\"Select a category\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            {categories.map((category) => (\n                              <SelectItem key={category.id} value={category.id}>\n                                {category.name}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"flex justify-end space-x-2\">\n                    <Button\n                      type=\"button\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        setIsCreateOpen(false);\n                        setEditingProduct(null);\n                        form.reset();\n                      }}\n                      data-testid=\"button-cancel\"\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      disabled={createProductMutation.isPending || updateProductMutation.isPending}\n                      data-testid=\"button-save-product\"\n                    >\n                      {createProductMutation.isPending || updateProductMutation.isPending\n                        ? \"Saving...\"\n                        : editingProduct\n                        ? \"Update Product\"\n                        : \"Create Product\"}\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </DialogContent>\n          </Dialog>\n        </div>\n\n        {products.length === 0 ? (\n          <div className=\"text-center py-16\">\n            <Package className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\" data-testid=\"text-no-products\">\n              No products yet\n            </h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Start by adding your first product\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {products.map((product) => (\n              <Card key={product.id} data-testid={`product-card-${product.id}`}>\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <CardTitle className=\"text-lg\" data-testid={`text-product-name-${product.id}`}>\n                      {product.name}\n                    </CardTitle>\n                    <div className=\"flex space-x-1\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleEdit(product)}\n                        data-testid={`button-edit-${product.id}`}\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => handleDelete(product.id)}\n                        disabled={deleteProductMutation.isPending}\n                        className=\"text-red-500 hover:text-red-700\"\n                        data-testid={`button-delete-${product.id}`}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                  <p className=\"text-sm text-muted-foreground line-clamp-2\" data-testid={`text-product-description-${product.id}`}>\n                    {product.description}\n                  </p>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-lg font-bold text-primary\" data-testid={`text-product-price-${product.id}`}>\n                        ₹{product.price}\n                      </span>\n                      {product.originalPrice && (\n                        <span className=\"text-sm text-muted-foreground line-through\">\n                          ₹{product.originalPrice}\n                        </span>\n                      )}\n                    </div>\n                    <Badge\n                      variant={product.isActive ? \"default\" : \"secondary\"}\n                      data-testid={`badge-product-status-${product.id}`}\n                    >\n                      {product.isActive ? \"Active\" : \"Inactive\"}\n                    </Badge>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                    <span>Stock: {product.inventory || 0}</span>\n                    <span>Category: {categories.find(c => c.id === product.categoryId)?.name || \"Unknown\"}</span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Edit Product Dialog */}\n      <Dialog open={!!editingProduct} onOpenChange={(open) => !open && setEditingProduct(null)}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Edit Product</DialogTitle>\n          </DialogHeader>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Name</FormLabel>\n                      <FormControl>\n                        <Input {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"slug\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Slug</FormLabel>\n                      <FormControl>\n                        <Input {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                <FormField\n                  control={form.control}\n                  name=\"price\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Price</FormLabel>\n                      <FormControl>\n                        <Input {...field} type=\"number\" step=\"0.01\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"originalPrice\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Original Price</FormLabel>\n                      <FormControl>\n                        <Input {...field} type=\"number\" step=\"0.01\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"inventory\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Inventory</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"number\"\n                          onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <FormField\n                control={form.control}\n                name=\"categoryId\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Category</FormLabel>\n                    <Select onValueChange={field.onChange} value={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select a category\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {categories.map((category) => (\n                          <SelectItem key={category.id} value={category.id}>\n                            {category.name}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"flex justify-end space-x-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => {\n                    setEditingProduct(null);\n                    form.reset();\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={updateProductMutation.isPending}\n                >\n                  {updateProductMutation.isPending ? \"Updating...\" : \"Update Product\"}\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","size_bytes":23408},"attached_assets/content-1757358202812.md":{"content":"![MOB](https://customjersey.in/wp-content/uploads/2024/05/MOB.webp)\n\n![mobile](https://customjersey.in/wp-content/uploads/2025/07/mobile.jpg)\n\n![MOB2](https://customjersey.in/wp-content/uploads/2024/05/MOB2.webp)\n\n![Banner1 (1)](https://customjersey.in/wp-content/uploads/2024/06/Banner1-1.png)\n\n![Esports banner](https://customjersey.in/wp-content/uploads/2025/07/Esports-banner.jpg)\n\n![Custom Jersey](https://customjersey.in/wp-content/uploads/2024/05/B01.jpg.webp)\n\n![Custom Jersey](https://customjersey.in/wp-content/uploads/2024/05/B02.jpg.webp)\n\n![Custom Jersey](https://customjersey.in/wp-content/uploads/2024/05/Banner04-copy.jpg.webp)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/Custom-Made-1-Copy.webp)\n\n### Custom Made\n\n![](https://customjersey.in/wp-content/uploads/2024/05/Free-Shipping-Copy.png.webp)\n\n### Free Shipping\n\n![](https://customjersey.in/wp-content/uploads/2024/05/no-minimum-order-2-Copy.png.webp)\n\n### No Minimum Order\n\n![](https://customjersey.in/wp-content/uploads/2024/05/Without-Limits.png.webp)\n\n### Free Customization\n\n# Choose Your Sports\n\n![](https://customjersey.in/wp-content/uploads/2024/05/01.webp)\n\n[Banner link](https://customjersey.in/index.php/product-category/cricket/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/02.webp)\n\n[Banner link](https://customjersey.in/index.php/customjerseyshop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/03-Bad.webp)\n\n[Banner link](https://customjersey.in/index.php/customjerseyshop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/04.webp)\n\n[Banner link](https://customjersey.in/index.php/customjerseyshop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/01.webp)\n\n[Banner link](https://customjersey.in/index.php/product-category/cricket/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/02.webp)\n\n[Banner link](https://customjersey.in/index.php/shop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/03-Bad.webp)\n\n[Banner link](https://customjersey.in/index.php/shop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/05/04.webp)\n\n[Banner link](https://customjersey.in/index.php/shop/)\n\n## Customized Esports Jersey\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/Blue-Inox.jpg)](https://customjersey.in/index.php/product/blue-inox-esports-jersey-premium-gaming-apparel-for-competitive-players/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02.jpg)](https://customjersey.in/index.php/product/blue-inox-esports-jersey-premium-gaming-apparel-for-competitive-players/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12085)\n\n[Quick view](https://customjersey.in/index.php/product/blue-inox-esports-jersey-premium-gaming-apparel-for-competitive-players/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/blue-inox-esports-jersey-premium-gaming-apparel-for-competitive-players/)\n\n### [Blue Inox Esports Jersey – Premium Gaming Apparel for Competitive Players](https://customjersey.in/index.php/product/blue-inox-esports-jersey-premium-gaming-apparel-for-competitive-players/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/Purple-FLex.jpg)](https://customjersey.in/index.php/product/the-galaxy-esports-jersey-stellar-gaming-apparel-for-ultimate-performance/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02-11.jpg)](https://customjersey.in/index.php/product/the-galaxy-esports-jersey-stellar-gaming-apparel-for-ultimate-performance/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12142)\n\n[Quick view](https://customjersey.in/index.php/product/the-galaxy-esports-jersey-stellar-gaming-apparel-for-ultimate-performance/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/the-galaxy-esports-jersey-stellar-gaming-apparel-for-ultimate-performance/)\n\n### [The Galaxy Esports Jersey – Stellar Gaming Apparel for Ultimate Performance](https://customjersey.in/index.php/product/the-galaxy-esports-jersey-stellar-gaming-apparel-for-ultimate-performance/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/Goblk.jpg)](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02-3.jpg)](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12100)\n\n[Quick view](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n### [Goblk Esports Jersey – High-Performance Gaming Apparel for Competitive Players](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/Red-Thunder.jpg)](https://customjersey.in/index.php/product/red-thunder-esports-jersey-power-packed-gaming/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02-10.jpg)](https://customjersey.in/index.php/product/red-thunder-esports-jersey-power-packed-gaming/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12137)\n\n[Quick view](https://customjersey.in/index.php/product/red-thunder-esports-jersey-power-packed-gaming/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/red-thunder-esports-jersey-power-packed-gaming/)\n\n### [Red Thunder Esports Jersey – Power-Packed Gaming](https://customjersey.in/index.php/product/red-thunder-esports-jersey-power-packed-gaming/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n## Customized Cricket Jersey\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/13-801x1024.jpg)](https://customjersey.in/index.php/product/grey-tricolor-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/14-801x1024.jpg)](https://customjersey.in/index.php/product/grey-tricolor-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11295)\n\n[Quick view](https://customjersey.in/index.php/product/grey-tricolor-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/grey-tricolor-cricket-team-jersey/)\n\n### [Grey Tricolor Cricket Team Jersey](https://customjersey.in/index.php/product/grey-tricolor-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/07-801x1024.jpg)](https://customjersey.in/index.php/product/rissing-eagle-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/08-801x1024.jpg)](https://customjersey.in/index.php/product/rissing-eagle-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11297)\n\n[Quick view](https://customjersey.in/index.php/product/rissing-eagle-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/rissing-eagle-cricket-team-jersey/)\n\n### [Rissing Eagle Cricket Team Jersey](https://customjersey.in/index.php/product/rissing-eagle-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJY-08-Front.jpg)](https://customjersey.in/index.php/product/yellow-shock-jersey-y-08/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJY-08-Back.jpg)](https://customjersey.in/index.php/product/yellow-shock-jersey-y-08/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11033)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-shock-jersey-y-08/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-shock-jersey-y-08/)\n\n### [Yellow Shock Jersey Y-08](https://customjersey.in/index.php/product/yellow-shock-jersey-y-08/)\n\n[Yellow Color](https://customjersey.in/index.php/product-category/yellow-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/15-801x1024.jpg)](https://customjersey.in/index.php/product/blue-feather-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/16-801x1024.jpg)](https://customjersey.in/index.php/product/blue-feather-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11300)\n\n[Quick view](https://customjersey.in/index.php/product/blue-feather-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/blue-feather-cricket-team-jersey/)\n\n### [Blue Feather Cricket Team Jersey](https://customjersey.in/index.php/product/blue-feather-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/19-801x1024.jpg)](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/20-801x1024.jpg)](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11331)\n\n[Quick view](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n### [Green Yellow Coss Cricket Team Jersey](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/03-1-801x1024.jpg)](https://customjersey.in/index.php/product/white-with-blue-navy-lines-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/04-801x1024.jpg)](https://customjersey.in/index.php/product/white-with-blue-navy-lines-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11294)\n\n[Quick view](https://customjersey.in/index.php/product/white-with-blue-navy-lines-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/white-with-blue-navy-lines-cricket-team-jersey/)\n\n### [White With Blue Navy Lines Cricket Team Jersey](https://customjersey.in/index.php/product/white-with-blue-navy-lines-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/11-801x1024.jpg)](https://customjersey.in/index.php/product/blue-white-grill-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/12-801x1024.jpg)](https://customjersey.in/index.php/product/blue-white-grill-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11296)\n\n[Quick view](https://customjersey.in/index.php/product/blue-white-grill-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/blue-white-grill-cricket-team-jersey/)\n\n### [Blue White Grill Cricket Team Jersey](https://customjersey.in/index.php/product/blue-white-grill-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/05-801x1024.jpg)](https://customjersey.in/index.php/product/sea-green-with-navy-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/06-801x1024.jpg)](https://customjersey.in/index.php/product/sea-green-with-navy-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11298)\n\n[Quick view](https://customjersey.in/index.php/product/sea-green-with-navy-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/sea-green-with-navy-cricket-team-jersey/)\n\n### [Sea Green With Navy Cricket Team Jersey](https://customjersey.in/index.php/product/sea-green-with-navy-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/09-1-801x1024.jpg)](https://customjersey.in/index.php/product/swril-of-orange-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/10-801x1024.jpg)](https://customjersey.in/index.php/product/swril-of-orange-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11299)\n\n[Quick view](https://customjersey.in/index.php/product/swril-of-orange-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/swril-of-orange-cricket-team-jersey/)\n\n### [Swril Of Orange Cricket Team Jersey](https://customjersey.in/index.php/product/swril-of-orange-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/17-801x1024.jpg)](https://customjersey.in/index.php/product/orange-grunge-cricket-custom-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/18-801x1024.jpg)](https://customjersey.in/index.php/product/orange-grunge-cricket-custom-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11332)\n\n[Quick view](https://customjersey.in/index.php/product/orange-grunge-cricket-custom-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/orange-grunge-cricket-custom-jersey/)\n\n### [Orange Grunge Cricket Custom Jersey](https://customjersey.in/index.php/product/orange-grunge-cricket-custom-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n#### Customized Football Jersey\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJW-02-Front.jpg)](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJW-02-Back.jpg)](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11052)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n### [Yellow Blue Grunge Jersey W-02](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[White Color](https://customjersey.in/index.php/product-category/white-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/Goblk.jpg)](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02-3.jpg)](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12100)\n\n[Quick view](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n### [Goblk Esports Jersey – High-Performance Gaming Apparel for Competitive Players](https://customjersey.in/index.php/product/gobik-esports-jersey-high-performance-gaming-apparel-for-competitive-players/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJB-04-Front-1.jpg)](https://customjersey.in/index.php/product/triangle-with-lines-on-blue-jersey-b-04/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJB-04-Back-1.jpg)](https://customjersey.in/index.php/product/triangle-with-lines-on-blue-jersey-b-04/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11272)\n\n[Quick view](https://customjersey.in/index.php/product/triangle-with-lines-on-blue-jersey-b-04/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/triangle-with-lines-on-blue-jersey-b-04/)\n\n### [Triangle With Lines On Blue Jersey B-04](https://customjersey.in/index.php/product/triangle-with-lines-on-blue-jersey-b-04/)\n\n[Blue Color](https://customjersey.in/index.php/product-category/blue-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/19-801x1024.jpg)](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/20-801x1024.jpg)](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11331)\n\n[Quick view](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n### [Green Yellow Coss Cricket Team Jersey](https://customjersey.in/index.php/product/green-yellow-coss-cricket-team-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-06-Front-1.jpg)](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-06-Back-1.jpg)](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11232)\n\n[Quick view](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n### [Grunge Stripe On Black Custom Jersey BK-06](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Black Color](https://customjersey.in/index.php/product-category/black-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJB-51-Front-1.jpg)](https://customjersey.in/index.php/product/orange-white-stipes-on-blue-jersey-b-51/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJB-51-Back-1.jpg)](https://customjersey.in/index.php/product/orange-white-stipes-on-blue-jersey-b-51/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11291)\n\n[Quick view](https://customjersey.in/index.php/product/orange-white-stipes-on-blue-jersey-b-51/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/orange-white-stipes-on-blue-jersey-b-51/)\n\n### [Orange & White Stipes On Blue Jersey B-51](https://customjersey.in/index.php/product/orange-white-stipes-on-blue-jersey-b-51/)\n\n[Blue Color](https://customjersey.in/index.php/product-category/blue-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2025/07/fiery-fizz.jpg)](https://customjersey.in/index.php/product/fiery-fizz-esports-jersey-bold-high-performance-gaming-apparel-for-competitive-players/)\n\n[![](https://customjersey.in/wp-content/uploads/2025/07/02-2.jpg)](https://customjersey.in/index.php/product/fiery-fizz-esports-jersey-bold-high-performance-gaming-apparel-for-competitive-players/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=12095)\n\n[Quick view](https://customjersey.in/index.php/product/fiery-fizz-esports-jersey-bold-high-performance-gaming-apparel-for-competitive-players/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/fiery-fizz-esports-jersey-bold-high-performance-gaming-apparel-for-competitive-players/)\n\n### [Fiery Fizz Esports Jersey – Bold, High-Performance Gaming Apparel for Competitive Players](https://customjersey.in/index.php/product/fiery-fizz-esports-jersey-bold-high-performance-gaming-apparel-for-competitive-players/)\n\n[Esports Jersey](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJB-21-Front-2.jpg)](https://customjersey.in/index.php/product/rhythm-of-blue-jersey-b-21/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJB-21-Back-1.jpg)](https://customjersey.in/index.php/product/rhythm-of-blue-jersey-b-21/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11289)\n\n[Quick view](https://customjersey.in/index.php/product/rhythm-of-blue-jersey-b-21/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/rhythm-of-blue-jersey-b-21/)\n\n### [Rhythm Of Blue Jersey B-21](https://customjersey.in/index.php/product/rhythm-of-blue-jersey-b-21/)\n\n[Blue Color](https://customjersey.in/index.php/product-category/blue-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJY-05-Front.jpg)](https://customjersey.in/index.php/product/yellow-white-lines-jersey-y-05/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJY-05-Back.jpg)](https://customjersey.in/index.php/product/yellow-white-lines-jersey-y-05/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11036)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-white-lines-jersey-y-05/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-white-lines-jersey-y-05/)\n\n### [Yellow & White Lines Jersey Y-05](https://customjersey.in/index.php/product/yellow-white-lines-jersey-y-05/)\n\n[Yellow Color](https://customjersey.in/index.php/product-category/yellow-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJM-01-Front.jpg)](https://customjersey.in/index.php/product/magenta-white-blue-jersey-m-01/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJM-01-Back.jpg)](https://customjersey.in/index.php/product/magenta-white-blue-jersey-m-01/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11174)\n\n[Quick view](https://customjersey.in/index.php/product/magenta-white-blue-jersey-m-01/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/magenta-white-blue-jersey-m-01/)\n\n### [Magenta White & Blue Jersey M-01](https://customjersey.in/index.php/product/magenta-white-blue-jersey-m-01/)\n\n[Magenta Color](https://customjersey.in/index.php/product-category/magenta/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n![](https://customjersey.in/wp-content/uploads/2024/08/04.jpg)\n\n[TO SHOP](https://customjersey.in/index.php/customjerseyshop/)\n\n[Banner link](https://customjersey.in/index.php/customjerseyshop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/08/01.jpg)\n\n[TO SHOP](https://customjersey.in/index.php/product-category/cricket/)\n\n[Banner link](https://customjersey.in/index.php/product-category/cricket/)\n\n![](https://customjersey.in/wp-content/uploads/2024/08/02.jpg)\n\n[TO SHOP](https://customjersey.in/index.php/customjerseyshop/)\n\n[Banner link](https://customjersey.in/index.php/customjerseyshop/)\n\n![](https://customjersey.in/wp-content/uploads/2024/08/03.jpg)\n\n[BUY NOW](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n[Banner link](https://customjersey.in/index.php/product-category/esports-jersey/)\n\n#### Best Seller Customized jersey\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-03-Front-1.webp)](https://customjersey.in/index.php/product/black-white-grunge-jersey-bk-03/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-03-Back-1.webp)](https://customjersey.in/index.php/product/black-white-grunge-jersey-bk-03/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11031)\n\n[Quick view](https://customjersey.in/index.php/product/black-white-grunge-jersey-bk-03/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/black-white-grunge-jersey-bk-03/)\n\n### [Black & White Grunge Jersey BK-03](https://customjersey.in/index.php/product/black-white-grunge-jersey-bk-03/)\n\n[Black Color](https://customjersey.in/index.php/product-category/black-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJR-02-Front.jpg)](https://customjersey.in/index.php/product/diagonal-stripes-of-red-black-white-jersey-r-02/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJR-02-Back.jpg)](https://customjersey.in/index.php/product/diagonal-stripes-of-red-black-white-jersey-r-02/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11106)\n\n[Quick view](https://customjersey.in/index.php/product/diagonal-stripes-of-red-black-white-jersey-r-02/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/diagonal-stripes-of-red-black-white-jersey-r-02/)\n\n### [Diagonal Stripes Of Red Black & White Jersey R-02](https://customjersey.in/index.php/product/diagonal-stripes-of-red-black-white-jersey-r-02/)\n\n[Red Color](https://customjersey.in/index.php/product-category/red-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJM-14-Front.jpg)](https://customjersey.in/index.php/product/purple-grunge-stripes-on-white-grey-jersey-m-14/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJM-14-Back.jpg)](https://customjersey.in/index.php/product/purple-grunge-stripes-on-white-grey-jersey-m-14/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11161)\n\n[Quick view](https://customjersey.in/index.php/product/purple-grunge-stripes-on-white-grey-jersey-m-14/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/purple-grunge-stripes-on-white-grey-jersey-m-14/)\n\n### [Purple Grunge Stripes On White & Grey Jersey M-14](https://customjersey.in/index.php/product/purple-grunge-stripes-on-white-grey-jersey-m-14/)\n\n[Magenta Color](https://customjersey.in/index.php/product-category/magenta/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJW-14-Front.jpg)](https://customjersey.in/index.php/product/yellow-blue-giggle-on-white-jersey-w-14/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJW-14-Back.jpg)](https://customjersey.in/index.php/product/yellow-blue-giggle-on-white-jersey-w-14/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11043)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-blue-giggle-on-white-jersey-w-14/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-blue-giggle-on-white-jersey-w-14/)\n\n### [Yellow Blue Giggle On white Jersey W-14](https://customjersey.in/index.php/product/yellow-blue-giggle-on-white-jersey-w-14/)\n\n[White Color](https://customjersey.in/index.php/product-category/white-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJW-07-Front.jpg)](https://customjersey.in/index.php/product/blue-spit-jersey-w-07/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJW-07-Back.jpg)](https://customjersey.in/index.php/product/blue-spit-jersey-w-07/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11047)\n\n[Quick view](https://customjersey.in/index.php/product/blue-spit-jersey-w-07/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/blue-spit-jersey-w-07/)\n\n### [Blue Spit Jersey W-07](https://customjersey.in/index.php/product/blue-spit-jersey-w-07/)\n\n[White Color](https://customjersey.in/index.php/product-category/white-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-38%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/01-801x1024.jpg)](https://customjersey.in/index.php/product/blue-grunge-cricket-jersey/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/02-801x1024.jpg)](https://customjersey.in/index.php/product/blue-grunge-cricket-jersey/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11293)\n\n[Quick view](https://customjersey.in/index.php/product/blue-grunge-cricket-jersey/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/blue-grunge-cricket-jersey/)\n\n### [Blue Grunge Cricket Jersey](https://customjersey.in/index.php/product/blue-grunge-cricket-jersey/)\n\n[Cricket Jersey](https://customjersey.in/index.php/product-category/cricket/)\n\n~~₹1,599.00~~ Original price was: ₹1,599.00.₹999.00Current price is: ₹999.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-06-Front-1.jpg)](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJBK-06-Back-1.jpg)](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11232)\n\n[Quick view](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n### [Grunge Stripe On Black Custom Jersey BK-06](https://customjersey.in/index.php/product/grunge-stripe-on-black-custom-jersey-bk-06/)\n\n[Black Color](https://customjersey.in/index.php/product-category/black-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJY-03-Front.jpg)](https://customjersey.in/index.php/product/yellow-black-twril-jersey-y-03/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJY-03-Back.jpg)](https://customjersey.in/index.php/product/yellow-black-twril-jersey-y-03/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11038)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-black-twril-jersey-y-03/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-black-twril-jersey-y-03/)\n\n### [Yellow & Black Twril Jersey Y-03](https://customjersey.in/index.php/product/yellow-black-twril-jersey-y-03/)\n\n[Yellow Color](https://customjersey.in/index.php/product-category/yellow-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJY-01-Front.jpg)](https://customjersey.in/index.php/product/black-base-with-yellow-arrows-jersey-y-01/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJY-01-Back.jpg)](https://customjersey.in/index.php/product/black-base-with-yellow-arrows-jersey-y-01/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11040)\n\n[Quick view](https://customjersey.in/index.php/product/black-base-with-yellow-arrows-jersey-y-01/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/black-base-with-yellow-arrows-jersey-y-01/)\n\n### [Black Base With Yellow Arrows Jersey Y-01](https://customjersey.in/index.php/product/black-base-with-yellow-arrows-jersey-y-01/)\n\n[Yellow Color](https://customjersey.in/index.php/product-category/yellow-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[-43%\\\\\n![](https://customjersey.in/wp-content/uploads/2024/05/CJW-02-Front.jpg)](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[![](https://customjersey.in/wp-content/uploads/2024/05/CJW-02-Back.jpg)](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[Compare](https://customjersey.in/index.php/compare/?product_id=11052)\n\n[Quick view](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[Add to wishlist](https://customjersey.in/index.php/wishlist/)\n\n[Select options](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n### [Yellow Blue Grunge Jersey W-02](https://customjersey.in/index.php/product/yellow-blue-grunge-jersey-w-02/)\n\n[White Color](https://customjersey.in/index.php/product-category/white-color/)\n\n~~₹1,499.00~~ Original price was: ₹1,499.00.₹849.00Current price is: ₹849.00.\n\n[Load more products](https://customjersey.in/#)\n\nLoading...\n\n![](<Base64-Image-Removed>)\n\n### Without Limits\n\nChange colors, add logos, names, numbers, all at no extra cost. You decide whether to buy one of our designs or create your own special design.\n\n![](<Base64-Image-Removed>)\n\n### Quality\n\nSelected technical fabrics and models designed to offer you the best experience. Each process is entrusted to the best experts in the sector.\n\n![](<Base64-Image-Removed>)\n\n### Design\n\nWith our team of designers you can realize the most unique and special ideas. Tell us your idea, we will realize it for you, with you.\n\n![](<Base64-Image-Removed>)\n\n### Service\n\nService\nWe support you in every step, from creating the design to delivering your personalized uniforms. Our team is at your service.\n\n![](<Base64-Image-Removed>)\n\n### Timing\n\nWe are always working to reduce waiting times to a minimum. Remember that every order is made from scratch just for you.\n\n![](<Base64-Image-Removed>)\n\n### Made In India\n\nThe production, creation and design processes are all managed in India and controlled solely by us to offer you the best service.\n\n## Elevate Your Game with Custom Jerseys for Cricket, Football, Esports, and Badminton\n\nIn the dynamic world of sports, team identity and performance go hand in hand. Whether you're stepping onto a cricket pitch, storming the football field, taking part in a high-stakes esports tournament, or competing in a badminton league, a **custom jersey** does more than just make you look good—it unites your team and reflects your passion.\n\n## Custom Cricket Jersey : Stand Out on the Pitch\n\nCricket is more than just a sport—it's a tradition. A **custom cricket jersey** allows teams to showcase their unique identity with personalized designs, colors, and logos. From local leagues to national tournaments, players are now opting to **customize cricket jerseys** that reflect their team spirit and performance goals.\n\nWhether you need moisture-wicking fabric for those long summer matches or a lightweight design for faster play, the right **cricket jersey** not only enhances comfort but also boosts confidence on the field.\n\n## Custom Football Jersey : Power Meets Performance\n\nA well-designed **custom football jersey** is crucial for teams aiming to make a mark. Football demands agility, speed, and team coordination—your jersey should be as dynamic as your gameplay. A **customized football jersey** can be tailored to fit each player's size and position while showcasing team branding that builds recognition and unity.\n\nFrom youth academies to semi-professional clubs, investing in high-quality **custom football jerseys** adds a professional touch that can elevate morale and team image.\n\n## Esports Jerseys: Gamers Deserve Style Too\n\nIn the fast-growing world of esports, appearances matter almost as much as performance. Professional and amateur teams alike are turning to **custom jerseys** to represent their brands, sponsors, and gamer tags. These **custom esports jerseys** blend comfort with sharp design—perfect for marathon sessions and streaming.\n\nDesigned with breathable fabrics and personalized elements like player names and logos, these jerseys offer a competitive edge that resonates on and off-screen.\n\n## Badminton Jerseys: Light, Sleek, and Stylish\n\nSpeed and precision define badminton—and so should your jersey. A **customized badminton jersey** is designed to be lightweight, breathable, and stylish, enabling swift movements and top-tier performance. Players now have the option to design **custom jerseys** that match their personal style or club identity.\n\nWith options for vibrant prints, performance-focused fabric, and ergonomic fits, a **custom jersey** for badminton ensures you not only play well but also look sharp while doing it.\n\n## Why Choose a Custom Jersey?\n\n- **Identity & Unity**: Promote team pride and recognition.\n\n- **Performance Fit**: Designed specifically for your sport’s needs.\n\n- **Personalization**: Names, numbers, logos, sponsors—your way.\n\n- **Quality Fabric**: Breathable, durable, and performance-ready.\n\n\n## Conclusion\n\n- Whether you're smashing sixes, scoring goals, dominating a digital battlefield, or executing the perfect drop shot, a **custom jersey** is your ultimate game-day companion. From a **custom cricket jersey** to a **customized football jersey**, the right apparel empowers athletes to feel like pros and play like champions.\n\nDesign your identity. Define your team. Dominate your sport.\n\n\n [Scroll to top button](https://customjersey.in/#)\n\nSearch\n\n- [Menu](https://customjersey.in/#)\n- [Categories](https://customjersey.in/#)\n\nShopping cart\n\n[Close](https://customjersey.in/#)\n\nSign in\n\n[Close](https://customjersey.in/#)\n\nUsername or email address \\*Required\n\nPassword \\*Required\n\nLog in\n\n[Lost your password?](https://customjersey.in/index.php/my-account/lost-password/)Remember me\n\nOR\n\nLogin with OTP\n\nDon't have an account? [Signup](https://customjersey.in/#)\n\nNo account yet?\n\n[Create an Account](https://customjersey.in/index.php/my-account/?action=register)\n\n[Close search form](https://customjersey.in/#)\nSearch\n\nStart typing to see products you are looking for.\n\n[Shop](https://customjersey.in/index.php/customjerseyshop/)\n\n[0 \\\\\nWishlist](https://customjersey.in/index.php/wishlist/)\n\n[0 items\\\\\nCart](https://customjersey.in/index.php/cart/)\n\n[My account](https://customjersey.in/index.php/my-account/)\n\nMobile Number\\*\n\nLogin with OTP [Back](https://customjersey.in/#)","size_bytes":41744}},"version":1}